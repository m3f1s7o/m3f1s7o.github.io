<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-06-20T23:02:27+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">M3f1s7o Blog</title><subtitle>Pentesting y Linux</subtitle><author><name>Jimmy Mendoza</name></author><entry><title type="html">Prize Draw</title><link href="http://localhost:4000/prize-draw/" rel="alternate" type="text/html" title="Prize Draw" /><published>2023-06-17T00:00:00+00:00</published><updated>2023-06-17T00:00:00+00:00</updated><id>http://localhost:4000/prize-draw</id><content type="html" xml:base="http://localhost:4000/prize-draw/"><![CDATA[<h1 id="prize-draw">Prize Draw</h1>

<p><a href="https://www.codewars.com/kata/5616868c81a0f281e500005c">Enlace al kata</a>: 5/5 üñ§</p>

<blockquote>
  <p>En este problema se nos pide encontrar el nombre ganador de un sorteo, como datos de entrada tenemos una lista de nombres, una lista de <em>pesos</em> y una posici√≥n que ser√° el nombre seleccionado. Para cada nombre tendremos que sumar el valor de todas sus letras, sumar la longitud del nombre y por √∫ltimo multiplicar por el peso que le corresponde de la lista, el resultado es un n√∫mero ganador para cada nombre. Con todos los n√∫meros ganadores obtenidos tendremos que ordenarlos de mayor a menor (si hay dos n√∫meros ganadores iguales se ordenar√° adem√°s alfab√©ticamente). Por √∫ltimo, devolveremos al nombre en la posici√≥n solicitada.</p>
</blockquote>

<h2 id="instrucciones">Instrucciones</h2>

<p><em>Instrucciones traducidas</em></p>

<p>Para participar en un sorteo cada quien da su nombre.</p>

<p>Cada letra del nombre tiene un valor el cual es su posici√≥n en el alfabeto ingl√©s. <code class="language-plaintext highlighter-rouge">A</code> y <code class="language-plaintext highlighter-rouge">a</code> tienen una posici√≥n <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">B</code> y <code class="language-plaintext highlighter-rouge">b</code> posici√≥n <code class="language-plaintext highlighter-rouge">2</code> y as√≠.</p>

<p>La <em>longitud</em> del nombre se suma a la <em>suma</em> de esas posiciones, de ah√≠ un n√∫mero <code class="language-plaintext highlighter-rouge">som</code>.</p>

<p>Un array de pesos aleatorios est√° ligado a los nombres y cada <code class="language-plaintext highlighter-rouge">som</code> es multiplicado por su correspondiente peso para obtener lo que llaman un <code class="language-plaintext highlighter-rouge">n√∫mero ganador</code>.</p>

<h3 id="ejemplo">Ejemplo</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>names: "COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH"
weights: [1, 4, 4, 5, 2, 1]

PauL -&gt; som = longitud del nombre + 16 + 1 + 21 + 12 = 4 + 50 -&gt; 54
El *peso* asociado con PauL es 2 as√≠ que el *n√∫mero ganador* de PauL es  54 * 2 = 108.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Ahora se pueden ordenar los nombres en el orden <em>decreciente</em> de los <code class="language-plaintext highlighter-rouge">n√∫meros ganadores</code>. Cuando dos personas tienen el mismo <code class="language-plaintext highlighter-rouge">n√∫mero ganador</code> ord√©nalos <em>alfab√©ticamente</em> por sus nombres.</p>

<h3 id="tareas">Tareas</h3>

<ul>
  <li>parametros: <code class="language-plaintext highlighter-rouge">st</code> una cadena de nombres, <code class="language-plaintext highlighter-rouge">we</code> un array de pesos, <code class="language-plaintext highlighter-rouge">n</code> una posici√≥n</li>
  <li>regresar: el nombre del participante con la posici√≥n <code class="language-plaintext highlighter-rouge">n</code> (posiciones son numeradas a partir de 1)</li>
</ul>

<h3 id="ejemplo-1">Ejemplo</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>names: "COLIN,AMANDBA,AMANDAB,CAROL,PauL,JOSEPH"
weights: [1, 4, 4, 5, 2, 1]
n: 4

La funci√≥n debe regresar: "PauL"
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="notas">Notas</h3>

<ul>
  <li>El array de pesos es por lo menos tan largo como la cantidad de nombres, puede ser m√°s largo.</li>
  <li>Si <code class="language-plaintext highlighter-rouge">st</code> est√° vac√≠a, regresa ‚ÄúNo participants‚Äù.</li>
  <li>Si <code class="language-plaintext highlighter-rouge">n</code> es m√°s grande que el n√∫mero de participantes, entonces regresa ‚ÄúNot enough participants‚Äù.</li>
</ul>

<hr />
<h2 id="mi-soluci√≥n">Mi soluci√≥n</h2>
<p>Esta soluci√≥n la fui desarrollando en la marcha, pues realmente s√≥lo sab√≠a lo b√°sico sobre variables, condicionales, funciones y ciclos, pero sin recordar al cien por ciento la sint√°xis. Consult√© bastantes p√°ginas para saber c√≥mo se hac√≠a lo que ten√≠a en mente, lo que me daba errror y sobre como refactorizar mi c√≥digo.</p>

<h3 id="algoritmo">Algoritmo</h3>

<p><img src="/assets/images/posts/prize_draw_algorithm.png" alt="algoritmo" /></p>

<h3 id="c√≥digo">C√≥digo</h3>

<p><em>C√≥digo con comentarios en espa√±ol</em></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
</pre></td><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

<span class="c"># valida los datos de entrada</span>
validate <span class="o">()</span> <span class="o">{</span>
  <span class="k">if</span> <span class="o">[[</span> <span class="nt">-z</span> <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"No participants"</span>
    
  <span class="k">elif</span> <span class="o">[[</span> <span class="si">$(</span><span class="nb">echo</span> <span class="nv">$1</span> | <span class="nb">tr</span> <span class="s2">","</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span> | <span class="nb">wc</span> <span class="nt">-l</span><span class="si">)</span> <span class="nt">-lt</span> <span class="nv">$3</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"Not enough participants"</span>
  
  <span class="k">else
    </span>rank <span class="nv">$1</span> <span class="nv">$2</span> <span class="nv">$3</span>
    
  <span class="k">fi</span>
   
<span class="o">}</span>

<span class="c"># procesa y ordena los nombres</span>
rank <span class="o">()</span> <span class="o">{</span>
  <span class="c"># pasa a min√∫sculas los nombres</span>
  <span class="nv">list</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">,,</span><span class="k">}</span><span class="s2">"</span>

  <span class="c"># separa nombres y pesos</span>
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">","</span> <span class="nb">read</span> <span class="nt">-ra</span> names <span class="o">&lt;&lt;&lt;</span> <span class="s2">"</span><span class="nv">$list</span><span class="s2">"</span> 
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">","</span> <span class="nb">read</span> <span class="nt">-ra</span> wghts <span class="o">&lt;&lt;&lt;</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span> 

  <span class="c"># obtiene cada nombre</span>
  <span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>0 <span class="k">$((</span> <span class="k">${#</span><span class="nv">names</span><span class="p">[@]</span><span class="k">}</span> <span class="o">-</span><span class="m">1</span> <span class="k">))</span><span class="si">)</span><span class="p">;</span> <span class="k">do
    </span><span class="nv">name</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">names</span><span class="p">[i]</span><span class="k">}</span><span class="s2">"</span>
    <span class="nv">total</span><span class="o">=</span>0

	<span class="c"># obtiene cada letra y su valor</span>
    <span class="k">for </span>j <span class="k">in</span> <span class="si">$(</span><span class="nb">seq </span>0 <span class="k">$((</span> <span class="k">${#</span><span class="nv">name</span><span class="k">}</span> <span class="o">-</span><span class="m">1</span> <span class="k">))</span><span class="si">)</span><span class="p">;</span> <span class="k">do</span>
      <span class="c">#total=$((total + $(echo $abc | cut -d "${name:j:1}" -f 1 | wc -c)))  # calcula el total en una l√≠nea, pero se mantuvo dando Execution Timed Out</span>
      
      <span class="nb">local </span><span class="nv">value</span><span class="o">=</span><span class="si">$(</span>charValue <span class="k">${</span><span class="nv">name</span>:j:1<span class="k">}</span><span class="si">)</span>
      <span class="nv">total</span><span class="o">=</span><span class="k">$((</span>total <span class="o">+</span> value<span class="k">))</span>
      
    <span class="k">done</span>

	<span class="c"># calcula los n√∫meros ganadores ((total + len) * weight)</span>
    <span class="nv">w_num</span><span class="o">=</span><span class="k">$((</span> <span class="k">$((</span>total <span class="o">+</span> <span class="k">${#</span><span class="nv">name</span><span class="k">}))</span> <span class="o">*</span> <span class="k">${</span><span class="nv">wghts</span><span class="p">[i]</span><span class="k">}</span> <span class="k">))</span>

	<span class="c"># cadena de nombres y n√∫meros ganadores</span>
    nms_wnum+<span class="o">=</span><span class="s2">"</span><span class="nv">$name</span><span class="s2"> </span><span class="nv">$w_num</span><span class="s2">,"</span>
    
  <span class="k">done</span>          

  <span class="c"># ordena primero por el n√∫mero ganador y luego por nombre</span>
  <span class="nv">sorted</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="nv">$nms_wnum</span> | <span class="nb">tr</span> <span class="s2">","</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span> | <span class="nb">sort</span> <span class="nt">-k</span> 2,2nr <span class="nt">-k</span> 1,1 | <span class="nb">tr</span> <span class="s2">" "</span> <span class="s2">":"</span><span class="si">)</span>

  <span class="c"># obtiene el nombre de la posici√≥n deseada</span>
  <span class="nv">name</span><span class="o">=</span><span class="si">$(</span><span class="nb">echo</span> <span class="nv">$sorted</span> | <span class="nb">tr</span> <span class="s2">" "</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span> | <span class="nb">nl</span> <span class="nt">-s</span><span class="s2">" "</span> <span class="nt">-w1</span> | <span class="nb">grep</span> <span class="nt">-w</span> <span class="s2">"</span><span class="nv">$3</span><span class="s2">"</span> | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s2">":"</span> <span class="nt">-f</span> 1 | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s2">" "</span> <span class="nt">-f</span> 2<span class="si">)</span>
  <span class="c"># devuelve el nombre con la primer letra en may√∫scula</span>
  <span class="nb">echo</span> <span class="k">${</span><span class="nv">name</span><span class="p">^</span><span class="k">}</span>
    
<span class="o">}</span>

<span class="c"># obtiene los valores indivuduales de las letras</span>
charValue <span class="o">()</span> <span class="o">{</span>
  <span class="nv">abc</span><span class="o">=</span><span class="s2">"abcdefghijklmnopqrstuvwxyz"</span>

  <span class="c"># corta la cadena abc con el argumento dado</span>
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="nb">read</span> <span class="nt">-ra</span> tmp <span class="o">&lt;&lt;&lt;</span> <span class="s2">"</span><span class="nv">$abc</span><span class="s2">"</span>

  <span class="c"># obtiene la longitud de la variable tmp</span>
  <span class="nb">local </span><span class="nv">value</span><span class="o">=</span><span class="k">$((</span> <span class="k">${#</span><span class="nv">tmp</span><span class="k">}</span> <span class="o">+</span><span class="m">1</span> <span class="k">))</span>
  <span class="nb">echo</span> <span class="nv">$value</span>
  
<span class="o">}</span>

validate <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$3</span><span class="s2">"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Cuando finalic√© me sent√≠ como si hubiera escrito el c√≥digo para echar a andar un transbordador espacial, y aunque sab√≠a que seguramente hab√≠a soluciones mucho mejores, me gust√≥ el Kata porque fue mi primer reto real en bash.</p>

<hr />
<h2 id="otras-soluciones">Otras soluciones</h2>

<p><a href="https://www.codewars.com/kata/reviews/59e1e45d456cd3977c0002e5/groups/62f9ed22885ae200011b7fec">Soluci√≥n</a> propuesta por el usuario <a href="https://www.codewars.com/users/DEV0001">DEV0001</a>. <strong>C√≥digo comentado por m√≠</strong>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="rouge-code"><pre><span class="c">#!/bin/bash</span>

rank <span class="o">()</span> <span class="o">{</span>
  <span class="c"># separa los nombres y los pesos</span>
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">","</span> <span class="nb">read</span> <span class="nt">-r</span> <span class="nt">-a</span> names <span class="o">&lt;&lt;&lt;</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>
  <span class="nv">IFS</span><span class="o">=</span><span class="s2">","</span> <span class="nb">read</span> <span class="nt">-r</span> <span class="nt">-a</span> weights <span class="o">&lt;&lt;&lt;</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span>
  <span class="nv">rank</span><span class="o">=</span><span class="s2">"</span><span class="nv">$3</span><span class="s2">"</span>

  <span class="c"># hace las validaciones</span>
  <span class="o">[[</span> <span class="k">${#</span><span class="nv">names</span><span class="p">[@]</span><span class="k">}</span> <span class="nt">-eq</span> 0 <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">"No participants"</span> <span class="o">&amp;&amp;</span> <span class="nb">exit</span>
  <span class="o">[[</span> <span class="k">${</span><span class="nv">rank</span><span class="k">}</span> <span class="nt">-gt</span> <span class="k">${#</span><span class="nv">names</span><span class="p">[@]</span><span class="k">}</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">"Not enough participants"</span> <span class="o">&amp;&amp;</span> <span class="nb">exit</span>

  <span class="c"># recorre todos los nombres</span>
  <span class="k">for </span>i <span class="k">in</span> <span class="k">${</span><span class="p">!names[@]</span><span class="k">}</span><span class="p">;</span> <span class="k">do</span>
	<span class="c"># obtiene la longitud del nombre</span>
    <span class="nb">let </span><span class="nv">res</span><span class="o">=</span><span class="k">${#</span><span class="nv">names</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="k">}</span>
	<span class="c"># recorre los car√°cteres del nombre</span>
    <span class="k">for </span>chr <span class="k">in</span> <span class="si">$(</span><span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">names</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span> | <span class="nb">tr</span> <span class="o">[</span>A-Z] <span class="o">[</span>a-z] | <span class="nb">grep</span> <span class="nb">.</span> <span class="nt">-o</span><span class="si">)</span><span class="p">;</span> <span class="k">do</span>
	  <span class="c"># encuentra el valor del car√°cter</span>
      <span class="nb">let </span>res+<span class="o">=</span><span class="si">$(</span><span class="nb">eval echo</span> <span class="o">{</span>a..<span class="k">${</span><span class="nv">chr</span><span class="k">}</span><span class="o">}</span> | <span class="nb">tr</span> <span class="s2">" "</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span> | <span class="nb">wc</span> <span class="nt">-l</span><span class="si">)</span>
    <span class="k">done</span>
	<span class="c"># obtiene el n√∫mero ganador</span>
    <span class="nb">let </span>res<span class="k">*</span><span class="o">=</span><span class="k">${</span><span class="nv">weights</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="k">}</span>
    <span class="c"># da la cadena con el n√∫mero ganador y el nombre</span>
    <span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">res</span><span class="k">}</span><span class="s2"> </span><span class="k">${</span><span class="nv">names</span><span class="p">[</span><span class="nv">$i</span><span class="p">]</span><span class="k">}</span><span class="s2">"</span>
  <span class="k">done</span> <span class="se">\ </span> 
  <span class="c"># termina el ciclo y manda la salida al comando sort, ordena por la primer y segunda columna y manda la salida a awk</span>
  <span class="c"># awk obtiene la posici√≥n deseada e imprime el nombre</span>
  | <span class="nb">sort</span> <span class="nt">-k</span> 1nr,2 | <span class="nb">awk</span> <span class="nt">-v</span> <span class="s2">"n=</span><span class="k">${</span><span class="nv">rank</span><span class="k">}</span><span class="s2">"</span> <span class="s1">'(NR==n){print $2}'</span>
<span class="o">}</span>
rank <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$3</span><span class="s2">"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Esta soluci√≥n es la m√°s corta y f√°cil de entender que encontr√©. Da soluci√≥n al problema de una forma <strong>elegante</strong> y <strong>ordenada</strong>.</p>

<hr />
<h2 id="lo-que-aprend√≠">Lo que aprend√≠</h2>

<h3 id="en-mi-c√≥digo">En mi c√≥digo</h3>
<ul>
  <li><a href="https://www.howtogeek.com/730243/what-are-bash-dictionaries-on-linux-and-how-do-you-use-them/">Diccionarios en bash</a></li>
  <li><a href="http://stackoverflow.com/questions/918886/ddg#918931">Separar cadenas</a></li>
  <li><a href="https://linuxopsys.com/topics/sort-in-linux-by-multiple-columns">Ordenar m√∫ltiples columnas</a> (originalmente me ayud√© de ChatGPT)</li>
  <li>Mucha sint√°xis</li>
</ul>

<h3 id="en-el-c√≥digo-de-dev0001">En el c√≥digo de DEV0001</h3>
<ul>
  <li>Se pueden utilizar s√≥lo <a href="https://www.baeldung.com/linux/bash-single-vs-double-brackets">corchetes dobles</a> para validaciones o tests</li>
  <li>awk es bastante √∫til para procesar cadenas</li>
  <li>Algunas otras soluciones ingeniosas</li>
</ul>]]></content><author><name>Jimmy Mendoza</name></author><category term="programacion" /><category term="bash" /><category term="codewars" /><category term="6kyu" /><summary type="html"><![CDATA[Reto de programaci√≥n en bash para operar con cadenas y ordenarlas.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">La red m√°s simple</title><link href="http://localhost:4000/la-red-mas-simple/" rel="alternate" type="text/html" title="La red m√°s simple" /><published>2023-05-07T00:00:00+00:00</published><updated>2023-05-07T00:00:00+00:00</updated><id>http://localhost:4000/la-red-mas-simple</id><content type="html" xml:base="http://localhost:4000/la-red-mas-simple/"><![CDATA[<h1 id="la-red-m√°s-simple">La red m√°s simple</h1>

<h2 id="red">Red</h2>
<blockquote>
  <p>Una red es un conjunto de computadoras que est√°n conectadas en un medio com√∫n y comparten informaci√≥n entre s√≠.</p>
</blockquote>

<p>La red m√°s grande que existe es internet, es una red a la que se conectan millones de dispositivos y que te permite ver esta p√°gina web. Pero dejando de lado internet, tambi√©n utilizas otras redes m√°s peque√±as en tu d√≠a a d√≠a, por ejemplo, cuando conectas tu smarthpone a una bocina o audifonos bluetooth, est√°s conect√°ndote a la red de ese dispositivo y por lo tanto puedes intercabiar informaci√≥n con √©l.</p>

<p>Existen distintos tipos y topolog√≠as de redes, pero en este post vamos a ver la red m√°s simple utilizando el simulador Cisco Packet Tracer.</p>

<h2 id="construcci√≥n">Construcci√≥n</h2>

<h3 id="agregar-los-equipos">Agregar los equipos</h3>
<p>Para esta red vamos a agregar 2 <code class="language-plaintext highlighter-rouge">PCs</code> o <code class="language-plaintext highlighter-rouge">laptops</code> al espacio l√≥gico.</p>

<p><img src="/assets/images/posts/red01.png" alt="Agregar equipos" /></p>

<h3 id="conexi√≥n">Conexi√≥n</h3>
<p>Ahora conectaremos estos dos equipos utilizando el <code class="language-plaintext highlighter-rouge">Cable de cable cruzado</code> desde el puerto <code class="language-plaintext highlighter-rouge">FastEthernet0</code> al mismo del otro equipo.</p>

<p><img src="/assets/images/posts/red02.png" alt="Conectar equipos" /></p>

<p>Ya tenemos una red, sin embargo si probamos hacer env√≠ar una <code class="language-plaintext highlighter-rouge">PDU simple</code> de un equipo al otro, vamos diciendo que <em>no hay puertos funcionales para el dispositivo</em>. Esto pasa porque necesitamos agregar una direcci√≥n <code class="language-plaintext highlighter-rouge">IP</code> a cada equipo, de esa manera los dispositivos <em>tendran una identificaci√≥n</em> y el otro podr√° comunicarse con √©l.</p>

<h3 id="agregar-direcci√≥n-ip">Agregar direcci√≥n IP</h3>
<p>Para agregar una direcci√≥n IP vamos a ingresar a la <code class="language-plaintext highlighter-rouge">configuraci√≥n de IP</code> como se muestra en la imagen:</p>

<p><img src="/assets/images/posts/red03.png" alt="Agregar IPs" /></p>

<p>En la ventana que se nos abre vamos a llenar los siguientes campos:</p>
<ul>
  <li>IPv4 Address: <code class="language-plaintext highlighter-rouge">192.168.0.1</code></li>
  <li>Subnet Mask: <code class="language-plaintext highlighter-rouge">255.255.255.0</code></li>
</ul>

<p><img src="/assets/images/posts/red04.png" alt="Agregar IPs" /></p>

<p>Y cerramos la ventana. Ahora podemos <strong>posar</strong> el cursor sobre la PC y veremos que ya tiene una direcci√≥n IP asignada.</p>

<p><img src="/assets/images/posts/red05.png" alt="Verifica IPs" /></p>

<p>Ahora vamos a repetir el proceso con la laptop utilizando ahora la direcci√≥n IP <code class="language-plaintext highlighter-rouge">192.168.0.2</code> con la misma m√°scara de subred.</p>

<p><img src="/assets/images/posts/red06.png" alt="Segunda IP" /></p>

<p>Por √∫ltimo pondr√© en notas (presionando la tecla <code class="language-plaintext highlighter-rouge">N</code>) la direcci√≥n de los equipos.</p>

<p><img src="/assets/images/posts/red07.png" alt="Etiquetas" /></p>]]></content><author><name>Jimmy Mendoza</name></author><category term="redes" /><category term="packettracer" /><summary type="html"><![CDATA[Red de dos computadoras simulada en Cisco Packet Tracer.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Mr. Robot</title><link href="http://localhost:4000/mr-robot/" rel="alternate" type="text/html" title="Mr. Robot" /><published>2023-05-05T00:00:00+00:00</published><updated>2023-05-05T00:00:00+00:00</updated><id>http://localhost:4000/mr-robot</id><content type="html" xml:base="http://localhost:4000/mr-robot/"><![CDATA[<h1 id="mr-robot">Mr. Robot</h1>
<blockquote>
  <p>Mr. Robot es drama centrado en Elliot, un hacker que trabaja en una mon√≥tona empresa de ciberseguridad. Sin embargo, todo cambia cuando es reclutado por un grupo de hackers que tienen como meta un objetivo simple: cambiar el sistema que gobierna al mundo.</p>
</blockquote>

<p><img src="/assets/images/posts/mr_robot.png" alt="mr. robot" /></p>

<h2 id="por-qu√©-te-hablo-de-mr-robot">¬øPor qu√© te hablo de Mr. Robot?</h2>
<p>La serie est√° <strong>inspirada en t√©cnicas reales de hacking</strong>, no todo lo mostrado es cien por ciento apegado a la realidad, pero es una de las mejores representaciones de hacking en series y pel√≠culas que conozco.
Por lo que, si est√°s empezando en el mundo de la ciberseguridad es una buena forma de tener un acercamiento al mundillo del hacking.</p>

<p>Y a√∫n si ya tienes experiencia en el √°rea, si buscas una serie que te mantenga pegado al asiento y que te haga querer cambiar el sistema, Mr. Robot es lo mejor que te puedo recomendar. Adem√°s, ¬øpor qu√© no ver una de las series que tiene algunos de los <strong><a href="https://www.imdb.com/title/tt8084176/">cap√≠tulos mejores puntuados en IMDB</a></strong>?.</p>

<h2 id="c√≥mo-ver-la-serie">¬øC√≥mo ver la serie?</h2>
<p>Dos pasos:</p>
<ol>
  <li>Ve un cap√≠tulo</li>
  <li>Consulta el post del cap√≠tulo <a href="../categories/mr-robot/">aqu√≠</a></li>
</ol>

<p>Tan simple como eso. Y es que como te coment√© arriba, muchas de las escenas en el show tienen bases reales, por lo que <strong>probablemente escuchar√°s t√©rminos de redes, hacking y sistemas de las que jam√°s hayas escuchado antes</strong> (no te preocupes, a m√≠ tambi√©n me pas√≥ la primera vez que lo vi). Por eso he estado haciendo res√∫menes y explicaciones de cada uno de los episodios de la serie, donde repaso las escenas importantes para que no te sientas perdido. Adem√°s es una buena forma de seguir aprendiendo.</p>

<p>En cada post doy un resumen no tan exhaustivo, pero dejo enlaces en cada tema a v√≠deos, art√≠culos u otros posts para que si te interesa, profundices m√°s en el tema.</p>]]></content><author><name>Jimmy Mendoza</name></author><category term="mr_robot" /><category term="series" /><category term="noob" /><summary type="html"><![CDATA[Mr. Robot, la mejor serie para empezar a aprender sobre hacking]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Pickle Rick</title><link href="http://localhost:4000/pickle-rick/" rel="alternate" type="text/html" title="Pickle Rick" /><published>2023-04-16T00:00:00+00:00</published><updated>2023-04-16T00:00:00+00:00</updated><id>http://localhost:4000/pickle-rick</id><content type="html" xml:base="http://localhost:4000/pickle-rick/"><![CDATA[<h1 id="pickle-rick">Pickle Rick</h1>
<p>Enlace: https://tryhackme.com/room/picklerick</p>

<p>Instrucciones:
Este reto con tema de Rick y Morty requiere que explotes un <strong>servidor web</strong> para encontrar 3 ingredientes que ayudar√°n a Rick a hacer su poci√≥n para transformarse de nuevo en humano de su forma de pepinillo.</p>

<p>Una vez que nos hayamos conectado a trav√©s de VPN a la m√°quina empezaremos con la fase de reconocimiento.</p>

<hr />
<h2 id="reconocimiento">Reconocimiento</h2>

<h3 id="nmap">nmap</h3>
<p>Lo primero que haremos es ejecutar nmap para descubrir los puertos del sistema objetivo:</p>

<div class="language-shell-session highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>nmap <span class="nt">-n</span> <span class="nt">-Pn</span> &lt;ip&gt; 
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/maquinas/nmap.png" alt="nmap" /></p>

<p>Vemos que hay dos puertos abiertos, empezaremos por revisar el <strong>servidor web del puerto 80</strong> (<em>las instrucciones nos mencionaban un servidor web</em>).</p>

<h3 id="servidor-web">Servidor web</h3>
<p><img src="/assets/images/maquinas/web_server.png" alt="Servidor" /></p>

<p>La p√°gina principal nos da a entender que habr√° un <code class="language-plaintext highlighter-rouge">login</code>, pero al parecer tendremos que encontrar las credenciales por nuestra cuenta.</p>

<p>Ver este servidor web me dio ganas de utilizar <code class="language-plaintext highlighter-rouge">gobuster</code>.</p>

<h3 id="gobuster">gobuster</h3>
<p>Vamos a enumerar los directorios web de este servidor con la <code class="language-plaintext highlighter-rouge">wordlist</code> <code class="language-plaintext highlighter-rouge">/dirb/common.txt</code>, quiz√° nos encontremos algo interesante.</p>

<div class="language-shell-session highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>gobuster <span class="nb">dir</span> <span class="nt">-w</span> /usr/share/wordlists/dirb/common.txt <span class="nt">-u</span> http://&lt;ip&gt;
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/maquinas/gobuster.png" alt="gobuster" /></p>

<p>Los p√°ginas disponibles (<code class="language-plaintext highlighter-rouge">status: 200</code>) son:</p>
<ul>
  <li>index.html</li>
  <li>robots.txt</li>
  <li>login.php</li>
</ul>

<p>Efectivamente hay un login, pero a√∫n necesitamos un usuario y contrase√±a, tal vez el contenido de <code class="language-plaintext highlighter-rouge">robots.txt</code> sea una de las dos:</p>

<p><img src="/assets/images/maquinas/robots.png" alt="robots.txt" /></p>

<p>No nos quedan m√°s p√°ginas para analizar, pero tal vez revisando el <strong>c√≥digo fuente</strong> nos sea √∫til, veamos el de <code class="language-plaintext highlighter-rouge">login.php</code>:</p>

<p><img src="/assets/images/maquinas/login_source.png" alt="login.php" /></p>

<p>Podemos ver que Rick utiliz√≥ un comentario para guardar su usuario, por lo tanto, el texto que encontramos en <code class="language-plaintext highlighter-rouge">robots.txt</code> puede que sea nuestra contrase√±a, intentemos con eso.</p>

<hr />
<h2 id="ataque">Ataque</h2>
<p>¬°Encontramos las credenciales del login! Ahora parece que tenmos acceso a una <code class="language-plaintext highlighter-rouge">web shell</code>, si introducimos <code class="language-plaintext highlighter-rouge">pwd</code> nos regresa:</p>

<p><img src="/assets/images/maquinas/pwd.png" alt="pwd" /></p>

<p>Por lo tanto, podemos utilizar este formulario para navegar por el sistema y encontrar los ingredientes necesarios. Hay que tener en cuenta que si utilizamos <code class="language-plaintext highlighter-rouge">cd</code>, no habr√° un efecto en nuestra ruta actual, por lo que usaremos <strong>rutas absolutas</strong>.</p>

<h3 id="primer-ingrediente">Primer ingrediente</h3>
<p>Si hacemos un <code class="language-plaintext highlighter-rouge">ls</code>, vemos los archivos que est√°n en el directorio del servidor web, y hay uno sospechoso con nombre <code class="language-plaintext highlighter-rouge">Sup3rS3cretPicl3Ingred.txt</code>. Veamos qu√© contiene.
Al parecer <code class="language-plaintext highlighter-rouge">cat</code>, <code class="language-plaintext highlighter-rouge">less</code>, <code class="language-plaintext highlighter-rouge">head</code> y otros comandos est√°n siendo bloqueados en esta web shell, as√≠ que usaremos <code class="language-plaintext highlighter-rouge">nl</code> para ver el contenido.</p>

<p><img src="/assets/images/maquinas/first.png" alt="Firs Ingred" /></p>

<p>As√≠ que, aqu√≠ tenemos el primero, veamos d√≥nde est√°n los otros. 
El archivo <code class="language-plaintext highlighter-rouge">clue.txt</code> nos dice que busquemos en todo el sistema, as√≠ que revisemos los directorios <code class="language-plaintext highlighter-rouge">home</code>.</p>

<h3 id="segundo-ingrediente">Segundo ingrediente</h3>
<p>El directorio <code class="language-plaintext highlighter-rouge">/home/rick</code> contiene un archivo llamado <code class="language-plaintext highlighter-rouge">second ingredients</code>, vaya, vaya‚Ä¶</p>

<p><img src="/assets/images/maquinas/second.png" alt="Second Ingred" /></p>

<p>S√≥lo nos falta uno, sigamos.</p>]]></content><author><name>Jimmy Mendoza</name></author><category term="maquina" /><category term="maquinas" /><category term="linux" /><category term="tryhackme" /><category term="easy_machine" /><category term="pentesting" /><summary type="html"><![CDATA[M√°quina de Try Hack Me con tem√°tica de Rick & Morty]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cheatsheet de Linux</title><link href="http://localhost:4000/linux-cheatsheet/" rel="alternate" type="text/html" title="Cheatsheet de Linux" /><published>2023-04-14T00:00:00+00:00</published><updated>2023-06-18T17:53:28+00:00</updated><id>http://localhost:4000/linux-cheatsheet</id><content type="html" xml:base="http://localhost:4000/linux-cheatsheet/"><![CDATA[<h1 id="comandos-en-linux">Comandos en Linux</h1>

<p>Sintaxis general de los comandos en Linux:</p>
<div class="language-shell-session highlighter-rouge"><div class="highlight"><pre class="chroma"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="gp">$</span><span class="w"> </span>comando <span class="nt">-opcion</span> argumentos
<span class="gp">$</span><span class="w"> </span><span class="nb">ls</span> <span class="nt">-la</span> /etc/  <span class="c"># ejemplo </span>
<span class="gp">$</span><span class="w"> </span><span class="nb">ls</span> /etc/ <span class="nt">-la</span>  <span class="c"># tambien es posible. menos comun</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />
<h2 id="buscar-archivos">Buscar archivos</h2>

<table>
  <thead>
    <tr>
      <th>Descripci√≥n</th>
      <th>Comando</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Busca un archivo en todo el sistema, propiedad del usuario <strong>usuario7</strong> y del grupo <strong>grupo6</strong> con tama√±o de 33 bytes</td>
      <td><code class="language-plaintext highlighter-rouge">find / -type f -size 33c -user usuario7 -group grupo6 2&gt;/dev/null</code></td>
    </tr>
    <tr>
      <td>Busca un archivo en el directorio actual, sin permisos de ejecuci√≥n, con tama√±o de 1033 bytes y muestra su contenido</td>
      <td><code class="language-plaintext highlighter-rouge">find ./ -type f ! -executable -size 1033c -exec cat {} \;</code></td>
    </tr>
  </tbody>
</table>

<h2 id="manipulaci√≥n-de-texto">Manipulaci√≥n de texto</h2>

<h3 id="cambiar-posici√≥n-de-caract√©res">Cambiar posici√≥n de caract√©res</h3>

<table>
  <thead>
    <tr>
      <th>Descripci√≥n</th>
      <th>Comando</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Rota los caract√©res 13 posiciones (cifra Caesar)</td>
      <td><code class="language-plaintext highlighter-rouge">cat &lt;file&gt; | tr [a-mn-zA-MN-Z] [n-za-mN-ZA-M]</code></td>
    </tr>
  </tbody>
</table>

<h3 id="eliminar-palabras">Eliminar palabras</h3>

<table>
  <thead>
    <tr>
      <th>Descripci√≥n</th>
      <th>Comando</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Elimina palabras de menos de <em>x</em> caract√©res</td>
      <td><code class="language-plaintext highlighter-rouge">sed -r '/^.{,&lt;x&gt;}$/d' &lt;archivo&gt;</code></td>
    </tr>
    <tr>
      <td>Elimina palabras sin caract√©res especiales</td>
      <td><code class="language-plaintext highlighter-rouge">sed -r '/[!-/:-@\[-\{-~]+/!d' &lt;archivo&gt;</code></td>
    </tr>
    <tr>
      <td>Elimina palabras sin n√∫meros</td>
      <td><code class="language-plaintext highlighter-rouge">sed -ri '/[0-9]+/!d' &lt;archivo&gt;</code></td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="administraci√≥n-de-usuarios-y-grupos">Administraci√≥n de usuarios y grupos</h2>
<p>Los siguientes comandos se ejecutan con <code class="language-plaintext highlighter-rouge">sudo</code> o con usuario <code class="language-plaintext highlighter-rouge">root</code>.</p>

<h3 id="usuarios">Usuarios</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Crear</td>
      <td><code class="language-plaintext highlighter-rouge">useradd -m -shell &lt;/ruta/ala/shell&gt; &lt;nombre&gt;</code></td>
      <td>Crea un nuevo usuario con su directorio home y se especifica su shell por default</td>
    </tr>
    <tr>
      <td>Cambiar contrase√±a</td>
      <td><code class="language-plaintext highlighter-rouge">passwd &lt;usuario&gt;</code></td>
      <td>Cambia/establece la contrase√±a para el usuario especificado</td>
    </tr>
    <tr>
      <td>Eliminar</td>
      <td><code class="language-plaintext highlighter-rouge">userdel &lt;usuario&gt;</code></td>
      <td>Elimina el usuario especificado</td>
    </tr>
  </tbody>
</table>

<h3 id="grupos">Grupos</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Crear</td>
      <td><code class="language-plaintext highlighter-rouge">groupadd &lt;nombre&gt;</code></td>
      <td>Crea un grupo con el nombre especificado</td>
    </tr>
    <tr>
      <td>Agregar usuarios</td>
      <td><code class="language-plaintext highlighter-rouge">usermod -aG &lt;grupo&gt; &lt;usuario&gt;</code></td>
      <td>Agrega el usuario al grupo especificado</td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="iptables">iptables</h2>
<p>Los siguientes comandos se ejecutan con <code class="language-plaintext highlighter-rouge">sudo</code> o con usuario <code class="language-plaintext highlighter-rouge">root</code>.</p>
<h3 id="filter-table">Filter Table</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Pol√≠tica de entrada</td>
      <td><code class="language-plaintext highlighter-rouge">iptables --policy INPUT &lt;ACCEPT/DROP&gt;</code></td>
      <td>Establece la pol√≠tica de entrada a aceptar/rechazar</td>
    </tr>
    <tr>
      <td>Filtrar por ip</td>
      <td><code class="language-plaintext highlighter-rouge">iptables -I INPUT -s &lt;ip&gt; -j DROP</code></td>
      <td>Rechaza la conexi√≥n proveniente de la ip especificada</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><code class="language-plaintext highlighter-rouge">iptables -I OUTPUT -d &lt;ip&gt; -j DROP</code></td>
      <td>Rechaza las conexiones a la ip especificada</td>
    </tr>
    <tr>
      <td>Filtrar por puerto</td>
      <td><code class="language-plaintext highlighter-rouge">iptables -I INPUT -p tcp --dport 80 -j DROP</code></td>
      <td>Rechaza las conexiones <code class="language-plaintext highlighter-rouge">tcp</code> al puerto 80</td>
    </tr>
    <tr>
      <td>Listar cadenas</td>
      <td><code class="language-plaintext highlighter-rouge">iptables -L --line-numbers</code></td>
      <td>Lista las cadenas con numeraci√≥n</td>
    </tr>
    <tr>
      <td>Eliminar cadena</td>
      <td><code class="language-plaintext highlighter-rouge">iptables -D INPUT &lt;n&gt;</code></td>
      <td>Elimina la cadena especificada</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Jimmy Mendoza</name></author><category term="[&quot;cheatsheet&quot;, &quot;linux&quot;]" /><category term="linux" /><category term="cheatsheet" /><category term="comandos" /><summary type="html"><![CDATA[Mi recopilaci√≥n de comandos para el uso de Linux.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cheatsheet de MariaDB</title><link href="http://localhost:4000/sql-cheatsheet/" rel="alternate" type="text/html" title="Cheatsheet de MariaDB" /><published>2023-04-14T00:00:00+00:00</published><updated>2023-04-14T00:00:00+00:00</updated><id>http://localhost:4000/sql-cheatsheet</id><content type="html" xml:base="http://localhost:4000/sql-cheatsheet/"><![CDATA[<h1 id="mariadb">MariaDB</h1>

<hr />
<h2 id="base-de-datos">Base de datos</h2>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Crear</td>
      <td><code class="language-plaintext highlighter-rouge">CREATE DATABASE nombre_db;</code></td>
    </tr>
    <tr>
      <td>Eliminar</td>
      <td><code class="language-plaintext highlighter-rouge">DROP DATABASE nombre_db;</code></td>
    </tr>
    <tr>
      <td>Listar</td>
      <td><code class="language-plaintext highlighter-rouge">SHOW DATABASES;</code></td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="tablas">Tablas</h2>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Crear tabla</td>
      <td><code class="language-plaintext highlighter-rouge">CREATE TABLE nombre_tabla(columna1 INT(5) AUTO_INCREMENT PRIMARY KEY NOT NULL, columna2 VARCHAR(20) NOT NULL DEFAULT "x", columna3 DATE);</code></td>
      <td>Crea una tabla con tres columnas con sus respectivos tipos de datos</td>
    </tr>
    <tr>
      <td>Eliminar tabla</td>
      <td><code class="language-plaintext highlighter-rouge">DROP TABLE nombre_tabla;</code></td>
      <td>Elimina la tabla especificada</td>
    </tr>
    <tr>
      <td>Listar</td>
      <td><code class="language-plaintext highlighter-rouge">SHOW TABLES;</code></td>
      <td>Lista todas las tablas de la base de datos</td>
    </tr>
  </tbody>
</table>

<h3 id="modificar">Modificar</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Agregar columna</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla ADD COLUMN nueva_columna DECIMAL(6,2) NOT NULL AFTER columna2;</code></td>
      <td>Agrega una nueva columna especificando su tipo de dato despu√©s de cierta columna</td>
    </tr>
    <tr>
      <td>Cambiar tipo de columna</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla MODIFY columna VARCHAR(20) NOT NULL UNIQUE;</code></td>
      <td>Altera el tipo de dato que almacena la columna</td>
    </tr>
    <tr>
      <td>Cambiar nombre de columna</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla CHANGE COLUMN nombre nuevo_nombre DECIMAL(6,2) NOT NULL;</code></td>
      <td>Cambia el nombre de una columna a la vez que se especifica su tipo de dato</td>
    </tr>
  </tbody>
</table>

<h3 id="llaves">Llaves</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Agregar PK</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla ADD PRIMARY KEY(columna);</code></td>
      <td>Establece como llave primaria una columna de la tabla</td>
    </tr>
    <tr>
      <td>Eliminar PK</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla DROP PRIMARY KEY;</code></td>
      <td>Elimina la llave primaria de una tabla</td>
    </tr>
    <tr>
      <td>Agregar FK</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla ADD CONSTRAINT FOREIGN KEY(columna) REFERENCES tabla2(col_pk);</code></td>
      <td>Establece una llave for√°nea que referencia a la llave primaria de otra tabla</td>
    </tr>
    <tr>
      <td>Eliminar FK</td>
      <td><code class="language-plaintext highlighter-rouge">ALTER TABLE nombre_tabla DROP FOREIGN KEY col_fk;</code></td>
      <td>Elimina la llave for√°nea de una columna</td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="registros">Registros</h2>

<h3 id="mostrar">Mostrar</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Mostrar todos</td>
      <td><code class="language-plaintext highlighter-rouge">SELECT * FROM nombre_tabla;</code></td>
      <td>Muestra todos los registros de la tabla especificada</td>
    </tr>
    <tr>
      <td>Mostrar algunas columnas</td>
      <td><code class="language-plaintext highlighter-rouge">SELECT col1, col2, col3 FROM nombre_tabla;</code></td>
      <td>Muestra todos los registros de las columnas especificadas</td>
    </tr>
    <tr>
      <td>Filtrar</td>
      <td><code class="language-plaintext highlighter-rouge">SELECT * FROM nombre_tabla WHERE columna = "xxx";</code></td>
      <td>Muestra los registros donde <code class="language-plaintext highlighter-rouge">columna</code> tenga valor <code class="language-plaintext highlighter-rouge">xxx</code></td>
    </tr>
    <tr>
      <td>Ordenar</td>
      <td><code class="language-plaintext highlighter-rouge">SELECT col1, col2 FROM nombre_tabla ORDER BY col2 ASC LIMIT 0,20;</code></td>
      <td>Muestra los 20 registros de las columnas especificadas, ordenando en formato ascendente la columna 2</td>
    </tr>
    <tr>
      <td>Agrupar</td>
      <td><code class="language-plaintext highlighter-rouge">SELECT * FROM nombre_tabla GROUP BY columna;</code></td>
      <td>Muestra los registros agrupados por la columna especificada</td>
    </tr>
  </tbody>
</table>

<h3 id="actualizar-y-borrar">Actualizar y borrar</h3>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Actualizar</td>
      <td><code class="language-plaintext highlighter-rouge">UPDATE nombre_tabla SET col1 = "xxx" col2 = "yyy", WHERE col3 = "zzz";</code></td>
      <td>Actualiza los registros que coincidan con la cl√°usula <code class="language-plaintext highlighter-rouge">WHERE</code>, <strong>si no se utiliza <code class="language-plaintext highlighter-rouge">WHERE</code> se actualizar√° toda la tabla</strong></td>
    </tr>
    <tr>
      <td>Borrar</td>
      <td><code class="language-plaintext highlighter-rouge">DELETE FROM nombre_tabla WHERE identifier = "xxx";</code></td>
      <td>Borra los registros que coincidan con la condici√≥n, al igual que <code class="language-plaintext highlighter-rouge">UPDATE</code> <strong>si no se usa <code class="language-plaintext highlighter-rouge">WHERE</code> se eliminar√°n todos los registros de la tabla</strong></td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="importar--exportar">Importar / Exportar</h2>
<p><strong>Los siguientes comandos se ejecutan desde la terminal del usuario.</strong></p>

<table>
  <thead>
    <tr>
      <th>Acci√≥n</th>
      <th>Comando</th>
      <th>Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Importar</td>
      <td><code class="language-plaintext highlighter-rouge">mariadb -u usuario -p nombre_bd &lt; script.mysql</code></td>
      <td>Importa el contenido del script en la bd especificada</td>
    </tr>
    <tr>
      <td>Exportar</td>
      <td><code class="language-plaintext highlighter-rouge">mysqldump -u usuario -p nombre_bd &gt; bd.mysql</code></td>
      <td>Exporta el contenido de una bd a un script</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Jimmy Mendoza</name></author><category term="cheatsheet" /><category term="sql" /><category term="cheatsheet" /><category term="comandos" /><category term="bd" /><summary type="html"><![CDATA[Mi recopilaci√≥n de comandos para usar mariadb o mysql desde la terminal.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">1x1 Hello Friend</title><link href="http://localhost:4000/1x1-hello-friend/" rel="alternate" type="text/html" title="1x1 Hello Friend" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-06-18T17:53:28+00:00</updated><id>http://localhost:4000/1x1-hello-friend</id><content type="html" xml:base="http://localhost:4000/1x1-hello-friend/"><![CDATA[<h1 id="hello-friend">Hello Friend</h1>

<h2 id="el-caf√©-de-ron">El caf√© de Ron</h2>
<h3 id="conexi√≥n-de-fibra-√≥ptica">Conexi√≥n de fibra √≥ptica</h3>
<p>Esta escena es una de mis favoritas, Elliot est√° en <em>El Caf√© de Ron</em>, entra Ron, el due√±o del local, y Elliot lo confronta. Primero le dice que la raz√≥n que va ah√≠ es porque el Wi-Fi es r√°pido, tiene <strong>conexi√≥n de fibra √≥ptica con velocidades gigabit</strong>.</p>

<p>En el presente muchas de nuestras casas ya cuentan con conexi√≥n de fibra √≥ptica, pero para el a√±o en el que sali√≥ la serie (2015), la fibra √≥ptica a√∫n era una novedad. Justo esto fue lo que le pareci√≥ extra√±o a Elliot, por lo que procedi√≥ a interceptar el tr√°fico de la red.</p>

<h3 id="interceptar-el-tr√°fico-de-la-red">Interceptar el tr√°fico de la red</h3>
<p>La serie no dice con qu√© herramienta Elliot hizo esto, pero algunas de las herramientas que se pueden usar para este fin son <code class="language-plaintext highlighter-rouge">wireshark</code> y <code class="language-plaintext highlighter-rouge">tcpdump</code>. Este proceso consiste en estar conectado a una red y con una de las herramientas mencionadas empezar a <em>escuchar</em> las comunicaciones que viajan por esa red. Es como si estando en un parque te enfocas en las dos personas que est√°n sentadas conversando y agudizas tu o√≠do para captar todo lo que est√°n diciendo.</p>

<p>Interceptar/escuchar el tr√°fico de una red nos da la oportunidad de verificar que la red est√° en buenas condiciones, notar tr√°fico inusual o, incluso, espiar.</p>

<p>A continuaci√≥n, Elliot dice que decidi√≥ <em>hackear</em> a Ron, no se especifica qu√© hizo exactamente, pero es probable que con el an√°lisis del tr√°fico de la red diera con el sitio que Ron estaba operando, <em>Los chicos de Plato</em>, ingresara (de alguna forma) como administrador y copiara todo el contenido del sitio como evidencia, incluso los correos.</p>

<h3 id="servidores">Servidores</h3>
<p>Un servidor es una computadora dedicada a proveer <em>recursos</em> a otras computadoras. El tipo de servidor que se menciona aqu√≠ es un <strong>servidor web</strong>, el cual provee el contenido de Los chicos de Plato. Si el servidor es cerrado y borrado, este sitio y todo su contenido dejan de existir.</p>

<p>La raz√≥n de que Elliot haya confrontado a Ron es porque si lo hac√≠a de manera remota, hab√≠a la posibilidad que Ron huyera y cerrara los servidores de su sitio.</p>

<h3 id="red-tor">Red Tor</h3>
<p>Tor es una <a href="../la-red-mas-simple#Red">red</a> que funciona de forma especial: est√° enfocada a <strong>anonimizar a sus usuarios</strong>. Quienes se conectan a esta red quieren dificultar el proceso de ser identificados. La <a href="https://www.youtube.com/watch?v=79m7mX3rC8Q">red Tor</a> utiliza el protocolo <code class="language-plaintext highlighter-rouge">onion</code> para lograr enmascarar a sus usuarios.</p>

<p><img src="/assets/images/posts/red_tor.png" alt="Red Tor" /></p>

<h4 id="protocolo-onion">Protocolo onion</h4>
<p>Este protocolo trabaja por capas (por eso el <em>onion</em>), con estas capas logra ofuscar la identificaci√≥n de los usuarios y encriptar sus comunicaciones.</p>

<p>Pese a todo esto, como Elliot dice: <em>la red Tor no es tan an√≥nima como crees</em>. Vamos, no es una herramienta m√°gica que te hace invisible, a√∫n en su dise√±o tiene algunos puntos d√©biles. Si alguien analiza el tama√±o de los mensajes y la frecuencia de la comunicaci√≥n entre el usuario y en nodo de entrada, y aparte tiene acceso al nodo de salida, donde las comunicaciones ya no est√°n encriptadas por la red Tor, es posible conocer el tr√°fico del usuario (justo lo que conoc√≠a Elliot).</p>

<h3 id="en-resumen">En resumen‚Ä¶</h3>
<p>Resumiendo lo que Elliot hizo en esta escena:</p>
<ol>
  <li>Le gustaba la velocidad de la red del caf√©</li>
  <li>Not√≥ tr√°fico raro</li>
  <li>Captur√≥ y analiz√≥ el tr√°fico de la red</li>
  <li>Encontr√≥ el nodo de salida de la red Tor y descubri√≥ sus servidores de Ron</li>
  <li>Ingres√≥ a los servidores de Los chicos de Plato</li>
  <li>Descarg√≥ todo su contenido y correos</li>
  <li>Hizo una denuncia y confront√≥ a Ron en lo que llegaba el FBI</li>
</ol>

<p><img src="/assets/images/posts/ron's_coffee.png" alt="El caf√© de Ron" /></p>

<hr />

<h2 id="allsafe">Allsafe</h2>

<h3 id="log-file">Log file</h3>
<p>Los <code class="language-plaintext highlighter-rouge">log files</code> son archivos en lo que se lleva un registro de todas las acciones realizadas en un sistema. Este tipo de archivos son muy importantes para los administradores del sistema porque cuando ocurre un ataque o una brecha de seguridad, analizar los log files puede dar pistas de c√≥mo ocurri√≥ dicho ataque.</p>

<p>Mirando el log file del servidor Elliot pudo determinar que el ataque que sufrieron fue un ataque <a href="https://www.cloudflare.com/learning/ddos/ddos-attack-tools/r-u-dead-yet-rudy/"><code class="language-plaintext highlighter-rouge">RUDY</code></a>.</p>

<h3 id="rudy-attack">RUDY attack</h3>
<p><strong>R U Dead Yet?</strong> (¬øya est√°s muerto?) es un ataque de tipo DoS (abajo explicado), el cual explota servidores que reciben informaci√≥n de formularios a trav√©s de enviar respuestas muy largas de forma muy lenta. El servidor tiene que esperar a que llegue toda la respuesta, por lo que estar√° siendo realentizado y no podr√° atender a otros usuarios de forma efectiva. Es como si al pagar en la caja del supermercado la cuenta fuera de $1,000, y t√∫ ingresaras una moneda de $1 cada diez segundos.</p>

<h4 id="ataque-dos">Ataque DoS</h4>
<p>Los ataques de <em>Denegaci√≥n de Servicio</em> (Denial of Service) son ataques que son muy comunes en la actualidad. Su prop√≥sito principal es <strong>impactar negativamente en el desempe√±o de un servidor</strong> para hacerlo lento, impedir que usuarios leg√≠timos accedan a √©l y, en casos extremos, dejarlo inoperativo.</p>

<p>El ataque RUDY es un ejemplo de ataque DoS porque su meta es ocupar al servidor con peticiones lentas e inutiles, sin embargo hay m√°s formas de ataques DoS, uno de los m√°s comunes es el <a href="./#ataque-ddos"><code class="language-plaintext highlighter-rouge">DDoS</code></a>.</p>

<hr />
<h2 id="la-oficina-de-krysta">La oficina de Krysta</h2>

<h3 id="ataque-de-fuerza-bruta">Ataque de fuerza bruta</h3>
<p>Cuando conocemos por primera vez a Krysta sabemos que Elliot tiene acceso a sus cuentas de redes sociales y de correo, ¬øc√≥mo logr√≥ esto? Pues, al parecer utiliz√≥ una herramienta para hacerle fuerza bruta a sus cuentas. De hecho, en otras escenas podemos ver que se llama <code class="language-plaintext highlighter-rouge">elpscrk</code> (¬øelliot-password-crack?) y la utiliza para obtener las contrase√±as de Ollie y del novio de Krysta. √âste m√©todo de obtener contrase√±as es conocido como <strong>ataque de fuerza bruta</strong> y consiste en probar miles e incluso millones de posibilidades hasta encontrar la correcta.</p>

<p>Esta herramienta funciona recibiendo una lista de palabras (<code class="language-plaintext highlighter-rouge">wordlist</code>), que son las posibles contrase√±as para el usuario de Krysta, la wordlist que utiliza Elliot contiene 9,875,894 posibles contrase√±as, la contrase√±a correcta la encuentra en 24 segundos.</p>

<p>En la actualidad este ataque ya no es tan f√°cil de hacer para sitios online, porque los <code class="language-plaintext highlighter-rouge">firewalls</code> detectan el ataque y lo bloquean, sin embargo a√∫n es √∫til con distintos enfoques. Y tambi√©n agregar que, en la vida real este tipo de ataques requieren de un gran poder de procesamiento y generalmente toman horas en llevarse a cabo.</p>

<h4 id="wordlist">Wordlist</h4>
<p>Una wordlist consiste en una lista de posibles credenciales (generalmente) con las que se intentar√° probar acceder a un sistema. Estas wordlists se pueden encontrar en l√≠nea recopiladas de bases de datos filtradas en el pasado como las SecLists, pero tambi√©n se pueden <strong>crear especialmente para un objetivo</strong>, como lo hace Elliot para el novio de Krysta. Para ello hay que conocer ciertos datos de nuestro objetivo y con herramientas como <code class="language-plaintext highlighter-rouge">hydra</code> se pueden generar permutaciones de estas palabras, obteniendo una wordlist gigantesca si es necesario.</p>

<p><img src="/assets/images/posts/elpscrk.png" alt="elpscrk" /></p>

<hr />
<h2 id="ejecutivos-de-e-corp">Ejecutivos de E-Corp</h2>

<h3 id="linux">Linux</h3>
<p>Cuando los ejecutivos de E-Corp visitan Allsafe, <strong>Tyrell Wellick</strong> le dice a Elliot que al igual que √©l, tambi√©n <strong>utiliza Linux</strong>. Y como Linux es generalmente utilizado por personas con un conocimiento m√°s avanzado, es sorpresa para Elliot.</p>

<p>Linux es un sistema opertativo que a diferencia de Windows es de c√≥digo abierto y gratuito, esto lo hace altamente configurable y adaptable, por ello existen muchas variaciones de Linux. <strong>Kali Linux y Parrot OS</strong> son dos <em>versiones</em> de este sistema operativo y est√°n pensado espec√≠ficamente para <strong>hacking y pentesting</strong>. De hecho, en la serie Elliot utiliza Kali para sus ataques.</p>

<h4 id="gnome-y-kde">Gnome y KDE</h4>
<p>Tambi√©n Wellick menciona <em>Gnome</em> y <em>KDE</em>, √©stos son dos entornos de escritorio muy populares en Linux, b√°sicamente lo que hacen es darle una apariencia com√∫n a las ventanas, √≠conos y m√°s en el sistema operativo. Wellick es m√°s de KDE y, a decir verdad, yo tambi√©n.</p>

<table>
  <thead>
    <tr>
      <th>Ventanas de Gnome</th>
      <th>Ventanas de KDE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><img src="https://i.stack.imgur.com/YovBy.jpg" alt="gnome" /></td>
      <td><img src="https://news-cdn.softpedia.com/images/news2/beautify-your-kde-plasma-5-desktop-environment-with-freshly-ported-adapta-theme-517792-2.jpg" alt="kde" /></td>
    </tr>
  </tbody>
</table>

<hr />
<h2 id="ataque-a-allsafe">Ataque a Allsafe</h2>

<h3 id="ataque-ddos">Ataque DDoS</h3>
<p>Los ataques <a href="./#ataque-dos"><code class="language-plaintext highlighter-rouge">DoS</code></a> son efectivos pero tambi√©n son f√°ciles de detectar y bloquear por los <code class="language-plaintext highlighter-rouge">firewalls</code> de los servidores, si se detectan patrones de denegaci√≥n de servicio proviniendo de una cierta direcci√≥n <code class="language-plaintext highlighter-rouge">IP</code>, se bloquea esa direcci√≥n y problema solucionado.
Por este motivo los atacantes han ideado ataques m√°s complejos y m√°s efectivos. El <strong>Distributed Denial of Service</strong> (Denegaci√≥n de Servicio Distribuido) es la evoluci√≥n de DoS. Con este ataque se utilizan <strong>miles o millones de dispositivos</strong> para hacer peticiones a servidores, saturandolos con tanto tr√°fico. De esta forma un firewall ya no es tan efectivo para diferenciar entre un atacante y un usuario leg√≠timo que trata de utilizar el servidor.</p>

<p>Para conocer m√°s sobre los ataques DDoS y ver un caso real, mira el siguiente <a href="https://youtu.be/_IPeU2upbaw">v√≠deo</a>.</p>

<p><img src="/assets/images/posts/rebooting_server.png" alt="Reinicio del servidor" />
La versi√≥n</p>

<ul>
  <li>DDoS attack
    <ul>
      <li>Reconfigure DNS</li>
      <li>Reboot the servers</li>
      <li>They are inside the network</li>
      <li>Security protocols</li>
      <li>Load sharing</li>
      <li>Redirect traffic</li>
    </ul>
  </li>
  <li>Rootkit
    <ul>
      <li>Serverfarm</li>
      <li>Backup server</li>
      <li>Autoswitch</li>
      <li>Switch DNS</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jimmy Mendoza</name></author><category term="mr_robot" /><category term="series" /><summary type="html"><![CDATA[En este episodio conocemos a Elliot]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/" /><media:content medium="image" url="http://localhost:4000/" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>